{"ast":null,"code":"var _jsxFileName = \"/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/eventconfirmation/eventconfirmation.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport AdminLink from '../links/adminLink.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { CardMedia, Typography, Grid, Divider, TextField } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport Appbar from \"../appbar/appbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: { ...theme.typography.button,\n    backgroundColor: theme.palette.background.paper\n  },\n  title: {\n    marginTop: 40,\n    marginBottom: 40,\n    fontStyle: \"normal\",\n    fontWeight: \"bold;\",\n    fontSize: \"32px\"\n  },\n  subtitle: {\n    marginTop: 20,\n    marginBottom: 20\n  },\n  textfields: {\n    marginTop: 20,\n    marginBottom: 20,\n    color: \"green\"\n  },\n  icon: {\n    marginTop: 20,\n    marginBottom: 20,\n    marginLeft: 5\n  },\n  button: {\n    '& > *': {\n      margin: theme.spacing(1),\n      height: \"75px\",\n      width: \"250px\",\n      fontSize: 20\n    }\n  }\n}));\nconst outerTheme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: green[500]\n    }\n  }\n});\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#000000\",\n      contrastText: \"#fff\" //button text white instead of black\n\n    },\n    background: {\n      default: \"#394764\"\n    }\n  }\n}); //TESTING HOME PAGE\n\nexport default function EventConfirmation(props) {\n  _s();\n\n  const location = useLocation();\n  const classes = useStyles();\n  console.log(\"props:\", props);\n  let history = useHistory();\n\n  function handleClick() {\n    history.push(\"/taskRegistration\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Appbar, {\n      title: \"Event Confirmation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          variant: \"h3\",\n          align: \"center\",\n          children: \"Event has been created\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.subtitle,\n          variant: \"h6\",\n          align: \"center\",\n          children: \"Please use the codes below to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.textfields,\n          variant: \"h6\",\n          align: \"center\",\n          children: \"Volunteers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-read-only-input\",\n          align: \"center\",\n          defaultValue: location.state.res.volunteer_access_code,\n          InputProps: {\n            readOnly: true\n          },\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FileCopyIcon, {\n          className: classes.icon,\n          onClick: () => {\n            navigator.clipboard.writeText(location.state.res.volunteer_access_code);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.textfields,\n          variant: \"h6\",\n          align: \"center\",\n          children: \"Coordinators\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-read-only-input\",\n          className: classes.textfield,\n          align: \"center\",\n          defaultValue: location.state.res.coordinator_access_code,\n          InputProps: {\n            readOnly: true\n          },\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FileCopyIcon, {\n          className: classes.icon,\n          onClick: () => {\n            navigator.clipboard.writeText(location.state.res.coordinator_access_code);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          variant: \"body2\",\n          onClick: () => handleClick(),\n          children: \"Create a task!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EventConfirmation, \"Iz6VnD3ZbFtes+ISxP8fh1ljWaI=\", false, function () {\n  return [useLocation, useStyles, useHistory];\n});\n\n_c = EventConfirmation;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventConfirmation\");","map":{"version":3,"sources":["/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/eventconfirmation/eventconfirmation.js"],"names":["React","Button","AdminLink","makeStyles","createMuiTheme","ThemeProvider","green","CardMedia","Typography","Grid","Divider","TextField","FileCopyIcon","Link","useHistory","useLocation","Appbar","useStyles","theme","root","typography","button","backgroundColor","palette","background","paper","title","marginTop","marginBottom","fontStyle","fontWeight","fontSize","subtitle","textfields","color","icon","marginLeft","margin","spacing","height","width","outerTheme","secondary","main","primary","contrastText","default","EventConfirmation","props","location","classes","console","log","history","handleClick","push","divider","state","res","volunteer_access_code","readOnly","navigator","clipboard","writeText","textfield","coordinator_access_code"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport AdminLink from '../links/adminLink.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { CardMedia, Typography, Grid, Divider, TextField } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport {\n    Link,\n    useHistory,\n    useLocation\n} from \"react-router-dom\";\nimport Appbar from \"../appbar/appbar\"\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        ...theme.typography.button,\n        backgroundColor: theme.palette.background.paper,\n    },\n    title: {\n        marginTop: 40,\n        marginBottom: 40,\n        fontStyle: \"normal\",\n        fontWeight: \"bold;\",\n        fontSize: \"32px\"\n    },\n    subtitle: {\n        marginTop: 20,\n        marginBottom: 20\n    },\n    textfields: {\n        marginTop: 20,\n        marginBottom: 20,\n        color: \"green\"\n    },\n    icon: {\n        marginTop: 20,\n        marginBottom: 20,\n        marginLeft: 5\n    },\n    button: {\n        '& > *': {\n            margin: theme.spacing(1),\n            height: \"75px\",\n            width: \"250px\",\n            fontSize: 20,\n        },\n    },\n}));\n\nconst outerTheme = createMuiTheme({\n    palette: {\n        secondary: {\n            main: green[500],\n        },\n    },\n});\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#000000\",\n            contrastText: \"#fff\" //button text white instead of black\n        },\n        background: {\n            default: \"#394764\"\n        }\n    }\n});\n\n//TESTING HOME PAGE\nexport default function EventConfirmation(props) {\n    const location = useLocation();\n    const classes = useStyles();\n    console.log(\"props:\", props)\n\n    let history = useHistory();\n\n    function handleClick() {\n        history.push(\"/taskRegistration\");\n    }\n\n    return (\n        <>\n            <Appbar title=\"Event Confirmation\"/>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <Typography className={classes.title} variant=\"h3\" align=\"center\">Event has been created</Typography>\n                    <Divider className={classes.divider} />\n                </Grid>\n                <Grid item>\n                    <Typography className={classes.subtitle} variant=\"h6\" align=\"center\">Please use the codes below to get started</Typography>\n                    <Divider className={classes.divider} />\n                </Grid>\n                <Grid item>\n                    <Typography className={classes.textfields} variant=\"h6\" align=\"center\">Volunteers</Typography>\n                    <TextField\n                        id=\"outlined-read-only-input\"\n                        align=\"center\"\n                        defaultValue={location.state.res.volunteer_access_code}\n                        InputProps={{\n                            readOnly: true,\n                        }}\n                        variant=\"outlined\"\n                    />\n                    <FileCopyIcon\n                        className={classes.icon}\n                        onClick={() => { navigator.clipboard.writeText(location.state.res.volunteer_access_code) }} />\n                </Grid>\n                <Grid item>\n                    <Typography className={classes.textfields} variant=\"h6\" align=\"center\">Coordinators</Typography>\n                    <TextField\n                        id=\"outlined-read-only-input\"\n                        className={classes.textfield}\n                        align=\"center\"\n                        defaultValue={location.state.res.coordinator_access_code}\n                        InputProps={{\n                            readOnly: true,\n                        }}\n                        variant=\"outlined\"\n                    />\n                    <FileCopyIcon\n                        className={classes.icon}\n                        onClick={() => { navigator.clipboard.writeText(location.state.res.coordinator_access_code) }} />\n                </Grid>\n                <Grid item>\n                    <Link\n                        variant=\"body2\"\n                        onClick={() => handleClick()\n                        }\n                    >\n                        Create a task!\n                </Link>\n                </Grid>\n\n            </Grid >\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}