{"ast":null,"code":"var _jsxFileName = \"/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/createVolunteer/createVolunteer.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Appbar from \"../appbar/appbar.js\";\nimport useGoogleMapsApi from '../googleapi/useGoogleMapsApi.js';\nimport { useHistory } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\n\nconst buildPath = require('../../redux/buildPath');\n\nconst mapStyles = {\n  height: \"100vh\",\n  width: \"100%\"\n};\nconst defaultCenter = {\n  lat: 41.3851,\n  lng: 2.1734\n};\nconst useStyles = makeStyles(theme => ({\n  root: { ...theme.typography.button,\n    backgroundColor: theme.palette.background.paper\n  },\n  string: {\n    marginTop: '20px',\n    marginBottom: '20px',\n    fontSize: '20px'\n  },\n  welcome: {\n    margin: '15px',\n    marginBottom: '10px',\n    fontSize: '28px',\n    fontWeight: 'bold'\n  },\n  starter: {\n    fontSize: '18px',\n    marginBottom: '60px'\n  },\n  padding: {\n    marginTop: '20px',\n    marginBottom: '20px'\n  },\n  button: {\n    width: '200px',\n    height: '60px',\n    fontSize: '22px',\n    background: '#27AE60',\n    boxShadow: '0px 4px 4px rgba(154, 154, 154, 0.25)',\n    radius: '10px',\n    color: '#FFFFFF'\n  },\n  smallbutton: {\n    marginTop: '20px',\n    width: '120px',\n    height: '40px',\n    fontSize: '13px',\n    background: '#27AE60',\n    boxShadow: '0px 4px 4px rgba(154, 154, 154, 0.25)',\n    radius: '10px',\n    color: '#FFFFFF'\n  },\n  image: {\n    marginTop: '15px',\n    height: '200px'\n  },\n  link: {\n    alignItems: \"center\",\n    color: \"#27AE60\"\n  }\n}));\nexport default function CreateVolunteer() {\n  const apiKey = 'AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4';\n  const inputRef = useRef();\n  const autocompleteRef = useRef();\n  const googleMapsApi = useGoogleMapsApi();\n  useEffect(() => {\n    if (googleMapsApi) {\n      autocompleteRef.current = new googleMapsApi.places.Autocomplete(inputRef.current, {\n        types: ['(cities)']\n      });\n      autocompleteRef.current.addListener('place_changed', () => {\n        const place = autocompleteRef.current.getPlace(); // Do something with the resolved place here (ie store in redux state)\n      });\n    }\n  }, [googleMapsApi]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    return false;\n  };\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password1, setPassword1] = useState('');\n  const [password2, setPassword2] = useState('');\n  const [longitude, setLongitude] = useState(0);\n  const [latitude, setLatitude] = useState(0);\n  const [distance, setDistance] = useState(0);\n  const [message, setMessage] = useState('');\n  const classes = useStyles();\n  let history = useHistory();\n\n  async function handleRegistration(event) {\n    event.preventDefault();\n    var obj = {\n      email: email,\n      password1: password1,\n      password2: password2,\n      first_name: firstName,\n      last_name: lastName,\n      longitude: longitude,\n      latitude: latitude,\n      accepted_distance: distance\n    };\n    var js = JSON.stringify(obj);\n\n    try {\n      const response = await fetch(buildPath('/vol/register'), {\n        method: 'POST',\n        body: js,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      var res = JSON.parse(await response.text());\n\n      if (res.id == -1) {\n        alert(JSON.stringify(res.error));\n      } else {\n        var user = {\n          first_name: res.first_name,\n          last_name: res.last_name,\n          id: res.id\n        };\n        localStorage.setItem('user_data', JSON.stringify(user));\n        setMessage('');\n        history.push('/');\n      }\n    } catch (e) {\n      alert(e.toString());\n      return;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Appbar, {\n    title: \"Volunteer\",\n    type: \"Volunteer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.welcome,\n    variant: \"h4\",\n    component: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Volunteer Registration\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"filled-bare\",\n    placeholder: \"First Name\",\n    margin: \"normal\",\n    variant: \"filled\",\n    onChange: e => setFirstName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"filled-bare\",\n    placeholder: \"Last Name\",\n    margin: \"normal\",\n    variant: \"filled\",\n    onChange: e => setLastName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"filled-bare\",\n    placeholder: \"Email\",\n    margin: \"normal\",\n    variant: \"filled\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"filled-bare\",\n    placeholder: \"Password\",\n    margin: \"normal\",\n    variant: \"filled\",\n    onChange: e => setPassword1(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"filled-bare\",\n    placeholder: \"Confirm Password\",\n    margin: \"normal\",\n    variant: \"filled\",\n    onChange: e => setPassword2(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, \"Google Maps Location Lookup\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"location\",\n    \"aria-label\": \"Search locations\",\n    ref: inputRef,\n    placeholder: \"placeholder\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"filled-bare\",\n    placeholder: \"Minimum distance of task\",\n    margin: \"normal\",\n    variant: \"filled\",\n    onChange: e => setDistance(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.smallbutton,\n    onClick: handleRegistration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/createVolunteer/createVolunteer.js"],"names":["React","useState","makeStyles","Grid","Appbar","useGoogleMapsApi","useHistory","Typography","TextField","Button","GoogleMap","LoadScript","buildPath","require","mapStyles","height","width","defaultCenter","lat","lng","useStyles","theme","root","typography","button","backgroundColor","palette","background","paper","string","marginTop","marginBottom","fontSize","welcome","margin","fontWeight","starter","padding","boxShadow","radius","color","smallbutton","image","link","alignItems","CreateVolunteer","apiKey","inputRef","useRef","autocompleteRef","googleMapsApi","useEffect","current","places","Autocomplete","types","addListener","place","getPlace","handleSubmit","e","preventDefault","firstName","setFirstName","lastName","setLastName","email","setEmail","password1","setPassword1","password2","setPassword2","longitude","setLongitude","latitude","setLatitude","distance","setDistance","message","setMessage","classes","history","handleRegistration","event","obj","first_name","last_name","accepted_distance","js","JSON","stringify","response","fetch","method","body","headers","res","parse","text","id","alert","error","user","localStorage","setItem","push","toString","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Appbar from \"../appbar/appbar.js\";\nimport useGoogleMapsApi from '../googleapi/useGoogleMapsApi.js'\n\nimport { useHistory } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\n\nconst buildPath = require('../../redux/buildPath');\n\nconst mapStyles = {        \n    height: \"100vh\",\n    width: \"100%\"};\n  const defaultCenter = {\n    lat: 41.3851, lng: 2.1734\n  }\n  \nconst useStyles = makeStyles((theme) => ({\n    root: {\n        ...theme.typography.button,\n        backgroundColor: theme.palette.background.paper,\n    },\n    string: {\n        marginTop: '20px',\n        marginBottom: '20px',\n        fontSize: '20px',\n    },\n    welcome: {\n        margin: '15px',\n        marginBottom: '10px',\n        fontSize: '28px',\n        fontWeight: 'bold',\n    },\n    starter: {\n        fontSize: '18px',\n        marginBottom: '60px',\n\n    },\n    padding: {\n        marginTop: '20px',\n        marginBottom: '20px',\n    },\n    button: {\n        width: '200px',\n        height: '60px',\n        fontSize: '22px',\n        background: '#27AE60',\n        boxShadow: '0px 4px 4px rgba(154, 154, 154, 0.25)',\n        radius: '10px',\n        color: '#FFFFFF'\n    },\n    smallbutton: { \n        marginTop:'20px',\n        width: '120px',\n        height: '40px',\n        fontSize: '13px',\n        background: '#27AE60',\n        boxShadow: '0px 4px 4px rgba(154, 154, 154, 0.25)',\n        radius: '10px',\n        color: '#FFFFFF'\n    },\n    image: {\n        marginTop: '15px',\n        height: '200px',\n    },\n    link: {\n        alignItems: \"center\",\n        color: \"#27AE60\",\n    }\n\n}));\n\nexport default function CreateVolunteer() {\n    const apiKey = 'AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4';\n    const inputRef = useRef()\n    const autocompleteRef = useRef()\n    const googleMapsApi = useGoogleMapsApi()\n  \n    useEffect(() => {\n      if (googleMapsApi) {\n        autocompleteRef.current = new googleMapsApi.places.Autocomplete(inputRef.current, { types: ['(cities)'] })\n        autocompleteRef.current.addListener('place_changed', () => {\n          const place = autocompleteRef.current.getPlace()\n          // Do something with the resolved place here (ie store in redux state)\n        })\n      }\n    }, [googleMapsApi])\n  \n    const handleSubmit = (e) => {\n      e.preventDefault()\n      return false\n    }\n    \n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password1, setPassword1] = useState('');\n    const [password2, setPassword2] = useState('');\n    const [longitude, setLongitude] = useState(0);\n    const [latitude, setLatitude] = useState(0);\n    const [distance, setDistance] = useState(0);\n    const [message, setMessage] = useState('');\n\n    const classes = useStyles();\n    let history = useHistory();\n\n    async function handleRegistration(event)\n    {\n        event.preventDefault();\n        var obj = {email: email, password1: password1, password2: password2, first_name: firstName, \n            last_name: lastName, longitude: longitude, latitude: latitude, accepted_distance: distance};\n\n        var js = JSON.stringify(obj);\n\n        try\n        {\n            const response = await fetch(buildPath('/vol/register'), {method: 'POST',\n                body: js, headers:{'Content-Type':'application/json'}});\n\n            var res = JSON.parse(await response.text());\n\n            if (res.id == -1)\n            {\n                alert(JSON.stringify(res.error));\n            }\n            else\n            {\n                var user = {first_name: res.first_name, last_name: res.last_name, id: res.id};\n                localStorage.setItem('user_data', JSON.stringify(user));\n\n                setMessage('');\n                history.push('/');\n            }\n        }\n        catch(e)\n        {\n            alert(e.toString());\n            return;\n        }\n    }\n    return (\n        <div>\n            <Appbar title=\"Volunteer\" type=\"Volunteer\"/>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n            >\n            {/* <Grid item>\n            <img className={classes.image} src=\"/images/volunteer.png\"></img>\n            </Grid> */}\n            <Grid item>\n            <Typography className={classes.welcome} variant=\"h4\" component=\"h4\" align=\"center\">Volunteer Registration</Typography>\n            </Grid>\n            <Grid item>\n              <TextField\n                required\n                id=\"filled-bare\"\n                placeholder={\"First Name\"}\n                margin=\"normal\"\n                variant=\"filled\"\n                onChange={(e)=> setFirstName(e.target.value)}\n               />\n            </Grid>\n            <Grid item>\n              <TextField\n                required\n                id=\"filled-bare\"\n                placeholder={\"Last Name\"}\n                margin=\"normal\"\n                variant=\"filled\"\n                onChange={(e)=> setLastName(e.target.value)}\n               />\n            </Grid>\n            <Grid item>\n              <TextField\n                required\n                id=\"filled-bare\"\n                placeholder={\"Email\"}\n                margin=\"normal\"\n                variant=\"filled\"\n                onChange={(e)=> setEmail(e.target.value)}\n               />\n            </Grid>\n            <Grid item>\n              <TextField\n                required\n                id=\"filled-bare\"\n                placeholder={\"Password\"}\n                margin=\"normal\"\n                variant=\"filled\"\n                onChange={(e)=> setPassword1(e.target.value)}\n               />\n            </Grid>\n            <Grid item>\n              <TextField\n                required\n                id=\"filled-bare\"\n                placeholder={\"Confirm Password\"}\n                margin=\"normal\"\n                variant=\"filled\"\n                onChange={(e)=> setPassword2(e.target.value)}\n               />\n            </Grid>\n            {/* <Grid item> */}\n            <form autoComplete='off' onSubmit={handleSubmit}>\n            <label htmlFor='location'>Google Maps Location Lookup</label>\n            <input\n                name='location'\n                aria-label='Search locations'\n                ref={inputRef}\n                placeholder='placeholder'\n                autoComplete='off'\n            />\n            </form>\n                {/* <LoadScript\n                    googleMapsApiKey='AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4'>\n                    <GoogleMap\n                        mapContainerStyle={mapStyles}\n                        zoom={13}\n                        center={defaultCenter}\n                    />\n                </LoadScript> */}\n              {/* <TextField\n                required\n                id=\"filled-bare\"\n                placeholder={\"Longitude\"}\n                margin=\"normal\"\n                variant=\"filled\"\n                onChange={(e)=> setLongitude(e.target.value)}\n               /> */}\n            </Grid>\n            <Grid item>\n              {/* <TextField\n                required\n                id=\"filled-bare\"\n                placeholder={\"Latitude\"}\n                margin=\"normal\"\n                variant=\"filled\"\n                onChange={(e)=> setLatitude(e.target.value)}\n               /> */}\n            {/* </Grid> */}\n            <Grid item>\n              <TextField\n                required\n                id=\"filled-bare\"\n                placeholder={\"Minimum distance of task\"}\n                margin=\"normal\"\n                variant=\"filled\"\n                onChange={(e)=> setDistance(e.target.value)}\n               />   \n            </Grid>\n            <Grid item>\n            <Button \n                className={classes.smallbutton}\n                onClick={handleRegistration}>Submit\n            </Button>\n            </Grid>\n            </Grid>\n        </div>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}