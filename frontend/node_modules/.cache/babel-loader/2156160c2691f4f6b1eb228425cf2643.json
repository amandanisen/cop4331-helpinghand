{"ast":null,"code":"var _jsxFileName = \"/Users/lawrenceoconnor/Documents/GitHub/cop4331-helpinghand/frontend/src/components/coordinatorpage/coordinatorpage.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport TaskCard from \"./coordinatortasklist\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Appbar from \"../appbar/appbar.js\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAreas } from \"../../redux/actions\";\nimport Fab from \"@mui/material/Fab\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useHistory } from \"react-router-dom\";\n\nconst buildPath = require(\"../../redux/buildPath\");\n\nvar [user_data, setUserData] = useState({});\nexport default function CoordinatorPage(props) {\n  const location = useLocation();\n  let history = useHistory();\n  const [tasks, setTasks] = useState([]);\n  const [selected, setSelected] = useState({});\n  let idTrack = useRef(null);\n  const [posts, setPosts] = useState([]);\n  const style = {\n    margin: 0,\n    top: \"auto\",\n    right: 20,\n    bottom: 20,\n    left: \"auto\",\n    position: \"fixed\",\n    backgroundColor: \"#19AE59\"\n  };\n  const fabStyle = {\n    right: 20,\n    position: \"fixed\"\n  };\n  useEffect(() => {\n    setUserData(localStorage.getItem(\"user_data\"));\n  }, [user_data]);\n  useEffect(() => {\n    if (props.areas && props.areas.length > 0) {\n      let index = location.state | 0;\n      setTasks(props.areas[index].tasks);\n    }\n  }, [props.areas]);\n  useEffect(() => {\n    if (tasks && tasks.length > 0 && Object.values(selected).length === 0) {\n      let taskObj = {};\n      tasks.forEach(task => taskObj[task.id] = false);\n      setSelected(taskObj);\n    }\n  }, [tasks, selected]);\n  useEffect(() => {\n    async function getTasks() {\n      console.log(buildPath(\"/coord/tasks\"));\n      var obj = {\n        email: user_data.id\n      };\n      var js = JSON.stringify(obj);\n      console.log(js);\n\n      try {\n        const response = await fetch(buildPath(\"/vol/tasks\"), {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: js\n        });\n        var res = JSON.parse(await response.text());\n\n        if (res.error != null) {\n          console.log(res.error);\n        } else {\n          console.log(\"success\"); //this is a check because the page might render twice and cause the call to fail\n          //if the call fails and res is set then the structure is different from if it returned tasks\n          //and we cans use the same syntax to parse it with map\n\n          if (res != \"no such user found\") {\n            setPosts(res);\n          } else {\n            console.log(\"The call might have failed above but its okay , there were no tasks\");\n          }\n\n          return res;\n        }\n      } catch (e) {\n        alert(e.toString());\n        return;\n      }\n    }\n\n    getTasks();\n  }, []); //TODO: CALL API TO GET TASKS WITHIN THAT USER\n\n  const taskAdded = [{\n    id: \"4\",\n    name: \"Feed the Homeless 2.0\",\n    location: \"Downtown Orlando 2.0\",\n    miles: \"2.6 miles\",\n    description: \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed. 2.0\",\n    numVol: \"2\",\n    maxVol: \"2\",\n    done: \"false\"\n  }, {\n    id: \"5\",\n    name: \"Feed the Homeless 3.0\",\n    location: \"Downtown Orlando 3.0\",\n    miles: \"3.6 miles\",\n    description: \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed. 3.0\",\n    numVol: \"3\",\n    maxVol: \"4\",\n    done: \"false\"\n  }];\n\n  const handleSelect = id => {\n    let newSelected = { ...selected\n    };\n\n    if (idTrack.current === null) {\n      idTrack.current = id;\n    }\n\n    if (selected[id]) {\n      // We are leaving the task\n      //Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: id, action: \"Leaving\"}}));\n      newSelected[id] = false;\n      setSelected(newSelected);\n    } else {\n      // We are joining the task\n      if (idTrack.current !== id) {//Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: idTrack.current, action: \"Leaving\"}}));\n      } //Socket.send(JSON.stringify({topic: \"task\", action: \"join\", message: {id: id, action: \"Joining\"}}));\n\n\n      for (const prop in newSelected) {\n        newSelected[prop] = false;\n      }\n\n      newSelected[id] = true;\n      setSelected(newSelected);\n    }\n\n    idTrack.current = id;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Appbar, {\n    title: \"Coordinator's Task Created\",\n    type: \"coordinator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2 // columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n    // justify=\"space-between\"\n    // spacing={{ xs: 2, md:  }}\n    ,\n    columns: {\n      xs: 4,\n      sm: 8,\n      md: 12\n    },\n    justifyContent: \"space-evenly\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, taskAdded.map((task, index) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: \"Task\" + task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TaskCard, {\n    selected: selected[task.id],\n    handleSelected: handleSelect,\n    id: task.id,\n    task: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Fab, {\n    style: style,\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    onClick: () => {\n      history.push(\"/createTask\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/lawrenceoconnor/Documents/GitHub/cop4331-helpinghand/frontend/src/components/coordinatorpage/coordinatorpage.js"],"names":["React","useState","useRef","useEffect","TaskCard","Grid","Appbar","useLocation","connect","setAreas","Fab","AddIcon","useHistory","buildPath","require","user_data","setUserData","CoordinatorPage","props","location","history","tasks","setTasks","selected","setSelected","idTrack","posts","setPosts","style","margin","top","right","bottom","left","position","backgroundColor","fabStyle","localStorage","getItem","areas","length","index","state","Object","values","taskObj","forEach","task","id","getTasks","console","log","obj","email","js","JSON","stringify","response","fetch","method","headers","body","res","parse","text","error","e","alert","toString","taskAdded","name","miles","description","numVol","maxVol","done","handleSelect","newSelected","current","prop","xs","sm","md","map","push"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport TaskCard from \"./coordinatortasklist\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Appbar from \"../appbar/appbar.js\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAreas } from \"../../redux/actions\";\nimport Fab from \"@mui/material/Fab\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useHistory } from \"react-router-dom\";\nconst buildPath = require(\"../../redux/buildPath\");\nvar [user_data, setUserData] = useState({});\n\nexport default function CoordinatorPage(props) {\n  const location = useLocation();\n  let history = useHistory();\n  const [tasks, setTasks] = useState([]);\n  const [selected, setSelected] = useState({});\n  let idTrack = useRef(null);\n  const [posts, setPosts] = useState([]);\n  const style = {\n    margin: 0,\n    top: \"auto\",\n    right: 20,\n    bottom: 20,\n    left: \"auto\",\n    position: \"fixed\",\n    backgroundColor: \"#19AE59\",\n  };\n  const fabStyle = {\n    right: 20,\n    position: \"fixed\",\n  };\n\n  useEffect(() => {\n    setUserData(localStorage.getItem(\"user_data\"));\n  }, [user_data]);\n\n  useEffect(() => {\n    if (props.areas && props.areas.length > 0) {\n      let index = location.state | 0;\n      setTasks(props.areas[index].tasks);\n    }\n  }, [props.areas]);\n\n  useEffect(() => {\n    if (tasks && tasks.length > 0 && Object.values(selected).length === 0) {\n      let taskObj = {};\n      tasks.forEach((task) => (taskObj[task.id] = false));\n      setSelected(taskObj);\n    }\n  }, [tasks, selected]);\n\n  useEffect(() => {\n    async function getTasks() {\n      console.log(buildPath(\"/coord/tasks\"));\n      var obj = { email: user_data.id };\n      var js = JSON.stringify(obj);\n      console.log(js);\n\n      try {\n        const response = await fetch(buildPath(\"/vol/tasks\"), {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: js,\n        });\n\n        var res = JSON.parse(await response.text());\n        if (res.error != null) {\n          console.log(res.error);\n        } else {\n          console.log(\"success\");\n          //this is a check because the page might render twice and cause the call to fail\n          //if the call fails and res is set then the structure is different from if it returned tasks\n          //and we cans use the same syntax to parse it with map\n          if (res != \"no such user found\") {\n            setPosts(res);\n          } else {\n            console.log(\n              \"The call might have failed above but its okay , there were no tasks\"\n            );\n          }\n          return res;\n        }\n      } catch (e) {\n        alert(e.toString());\n        return;\n      }\n    }\n\n    getTasks();\n  }, []);\n\n  //TODO: CALL API TO GET TASKS WITHIN THAT USER\n  const taskAdded = [\n    {\n      id: \"4\",\n      name: \"Feed the Homeless 2.0\",\n      location: \"Downtown Orlando 2.0\",\n      miles: \"2.6 miles\",\n      description:\n        \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed. 2.0\",\n      numVol: \"2\",\n      maxVol: \"2\",\n      done: \"false\",\n    },\n    {\n      id: \"5\",\n      name: \"Feed the Homeless 3.0\",\n      location: \"Downtown Orlando 3.0\",\n      miles: \"3.6 miles\",\n      description:\n        \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed. 3.0\",\n      numVol: \"3\",\n      maxVol: \"4\",\n      done: \"false\",\n    },\n  ];\n\n  const handleSelect = (id) => {\n    let newSelected = { ...selected };\n    if (idTrack.current === null) {\n      idTrack.current = id;\n    }\n    if (selected[id]) {\n      // We are leaving the task\n      //Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: id, action: \"Leaving\"}}));\n      newSelected[id] = false;\n      setSelected(newSelected);\n    } else {\n      // We are joining the task\n      if (idTrack.current !== id) {\n        //Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: idTrack.current, action: \"Leaving\"}}));\n      }\n      //Socket.send(JSON.stringify({topic: \"task\", action: \"join\", message: {id: id, action: \"Joining\"}}));\n      for (const prop in newSelected) {\n        newSelected[prop] = false;\n      }\n      newSelected[id] = true;\n      setSelected(newSelected);\n    }\n    idTrack.current = id;\n  };\n\n  return (\n    <div>\n      <Appbar title=\"Coordinator's Task Created\" type=\"coordinator\" />\n      <Grid\n        container\n        direction=\"row\"\n        spacing={2}\n        // columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n        // justify=\"space-between\"\n        // spacing={{ xs: 2, md:  }}\n        columns={{ xs: 4, sm: 8, md: 12 }}\n        justifyContent=\"space-evenly\"\n        alignItems=\"flex-start\"\n      >\n        {taskAdded.map((task, index) => (\n          <Grid item key={\"Task\" + task.id}>\n            <TaskCard\n              selected={selected[task.id]}\n              handleSelected={handleSelect}\n              id={task.id}\n              task={task}\n            />\n          </Grid>\n        ))}\n      </Grid>\n      <Fab\n        style={style}\n        color=\"primary\"\n        aria-label=\"add\"\n        onClick={() => {\n          history.push(\"/createTask\");\n        }}\n      >\n        <AddIcon />\n      </Fab>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}