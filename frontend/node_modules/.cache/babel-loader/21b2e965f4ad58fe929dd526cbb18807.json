{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julia\\\\OneDrive\\\\Documentos\\\\cop4331-helpinghand\\\\frontend\\\\src\\\\components\\\\taskform\\\\taskform.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport DateAndTimePickers from \"../datePicker/datePicker.js\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useHistory } from \"react-router-dom\";\nimport Appbar from \"../appbar/appbar.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nconst utilStyles = makeStyles(theme => ({\n  fields: {\n    \"& > *\": {\n      background: \"#F1F1F1\",\n      marginTop: \"20px\",\n      marginBottom: \"20px\",\n      // backgroundColor: \"#F1F1F1\",\n      opacity: \"0.90\" // color: \"#263238\",\n\n    }\n  },\n  date: {\n    marginTop: \"20px\"\n  },\n  margin: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    width: \"20ch\",\n    background: \"#F1F1F1\",\n    opacity: \"0.90\"\n  },\n  title: {\n    marginTop: \"40px\"\n  },\n  button: {\n    marginTop: \"40px\",\n    backgroundColor: \"#27AE60\"\n  },\n  image: {\n    marginTop: \"70px\",\n    height: \"300px\",\n    width: \"382px\",\n    alignSelf: \"center\"\n  }\n}));\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 40\n  },\n  radio1: {\n    width: \"110px\",\n    marginBottom: 20,\n    marginLeft: 0\n  },\n  radio2: {\n    width: \"110px\",\n    marginLeft: 5\n  },\n  radio3: {\n    width: \"110px\",\n    marginTop: 20,\n    marginLeft: 0,\n    marginBottom: 20\n  },\n  image: {\n    marginTop: \"5px\",\n    height: \"100px\",\n    justifySelf: \"center\"\n  },\n  button: {\n    marginTop: \"40px\",\n    width: \"110px\",\n    height: \"40px\",\n    backgroundColor: \"#27AE60\",\n    color: \"#FFFFFF\"\n  },\n  buttonColor: {\n    backgroundColor: \"#27AE60\",\n    color: \"#FFFFFF\"\n  },\n  tab: {\n    fullWidth: true,\n    textAlign: \"center\"\n  },\n  tabPanel: {\n    textAlign: \"center\"\n  },\n  navbuttons: {\n    width: \"100%\",\n    textAlign: \"center\"\n  }\n}));\nexport default function EventRegistrationForm() {\n  const utilStyle = utilStyles();\n  const classes = useStyles();\n  const [description, setDescription] = useState(\"\"); // '' is the initial state value\n\n  const [title, setTitle] = useState(\"\"); // '' is the initial state value\n\n  const [locationInput, setLocationInput] = useState(\"\"); // '' is the initial state value\n\n  const [maxVol, setMaxVol] = useState(\"\"); // '' is the initial state value\n\n  let res;\n  let history = useHistory();\n\n  function handleSubmit() {\n    axios.post(\"/task\", {\n      name: title,\n      description: description,\n      volunteer_limit: maxVol,\n      task_location: locationInput,\n      area_id: 1\n    }).then(function (response) {\n      console.log(response);\n      history.push(\"/volunteerPage\");\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Appbar, {\n    title: \"Create New Task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.root,\n    item: true,\n    xs: 12,\n    sm: 8,\n    md: 5,\n    component: Paper,\n    elevation: 6,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      my: 8,\n      mx: 4,\n      width: \"400px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    sx: {\n      my: 0,\n      mx: 0,\n      width: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"title\",\n    label: \"Title\",\n    name: \"title\",\n    autoComplete: \"title\",\n    autoFocus: true,\n    onChange: event => setTitle(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    marginBottom: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"description\",\n    label: \"Description\",\n    type: \"description\",\n    id: \"description\",\n    onChange: event => setDescription(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    marginBottom: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"maxVol\",\n    label: \"Number of Volunteers\",\n    type: \"maxVol\",\n    id: \"maxVol\",\n    onChange: event => setMaxVol(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    marginBottom: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"maxVol\",\n    label: \"Number of Volunteers\",\n    type: \"maxVol\",\n    id: \"maxVol\",\n    onChange: event => setMaxVol(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonColor,\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    sx: {\n      mt: 3,\n      mb: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 8\n    }\n  }, \"Create\")))))); // <>\n  //     <Appbar title=\"New Task Form\" />\n  //     <Grid\n  //         container\n  //         direction=\"column\"\n  //         justify=\"center\"\n  //         alignItems=\"center\"\n  //     >\n  //         {/* <Grid item>\n  //             <p className={utilStyle.title}\n  //             >New Task</p>\n  //         </Grid> */}\n  //         <Grid item className={utilStyle.title}>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 value={taskInput}\n  //                 onInput={e => setTaskInput(e.target.value)}\n  //                 id=\"Task-name\"\n  //                 label=\"Task name?\"\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"description\"\n  //                 label=\"Description?\"\n  //                 value={description}\n  //                 onInput={e => setDescription(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"maxVol\"\n  //                 label=\"How many volunteers are needed?\"\n  //                 value={maxVol}\n  //                 onInput={e => setMaxVol(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"location\"\n  //                 label=\"Location?\"\n  //                 value={locationInput}\n  //                 onInput={e => setLocationInput(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <Button\n  //                 className={utilStyle.button}\n  //                 onClick={() => { handleSubmit() }}>Submit</Button>\n  //         </Grid>\n  //         <Grid item>\n  //              <img className={utilStyle.image} src=\"/images/help.png\"></img>\n  //         </Grid>\n  //     </Grid>\n  // </>\n  // );\n}","map":{"version":3,"sources":["C:/Users/julia/OneDrive/Documentos/cop4331-helpinghand/frontend/src/components/taskform/taskform.js"],"names":["React","makeStyles","TextField","AccountCircle","DateAndTimePickers","InputAdornment","Button","axios","useState","Grid","useHistory","Appbar","Paper","Box","utilStyles","theme","fields","background","marginTop","marginBottom","opacity","date","margin","width","title","button","backgroundColor","image","height","alignSelf","useStyles","root","radio1","marginLeft","radio2","radio3","justifySelf","color","buttonColor","tab","fullWidth","textAlign","tabPanel","navbuttons","EventRegistrationForm","utilStyle","classes","description","setDescription","setTitle","locationInput","setLocationInput","maxVol","setMaxVol","res","history","handleSubmit","post","name","volunteer_limit","task_location","area_id","then","response","console","log","push","catch","error","my","mx","display","flexDirection","alignItems","event","target","value","mt","mb"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport DateAndTimePickers from \"../datePicker/datePicker.js\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Appbar from \"../appbar/appbar.js\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst utilStyles = makeStyles((theme) => ({\r\n\tfields: {\r\n\t\t\"& > *\": {\r\n\t\t\tbackground: \"#F1F1F1\",\r\n\t\t\tmarginTop: \"20px\",\r\n\t\t\tmarginBottom: \"20px\",\r\n\t\t\t// backgroundColor: \"#F1F1F1\",\r\n\t\t\topacity: \"0.90\",\r\n\r\n\t\t\t// color: \"#263238\",\r\n\t\t},\r\n\t},\r\n\tdate: {\r\n\t\tmarginTop: \"20px\",\r\n\t},\r\n\tmargin: {\r\n\t\tmarginTop: \"10px\",\r\n\t\tmarginBottom: \"10px\",\r\n\t\twidth: \"20ch\",\r\n\t\tbackground: \"#F1F1F1\",\r\n\t\topacity: \"0.90\",\r\n\t},\r\n\ttitle: {\r\n\t\tmarginTop: \"40px\",\r\n\t},\r\n\tbutton: {\r\n\t\tmarginTop: \"40px\",\r\n\t\tbackgroundColor: \"#27AE60\",\r\n\t},\r\n\timage: {\r\n\t\tmarginTop: \"70px\",\r\n\t\theight: \"300px\",\r\n\t\twidth: \"382px\",\r\n\t\talignSelf: \"center\",\r\n\t},\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmarginTop: 40,\r\n\t},\r\n\tradio1: {\r\n\t\twidth: \"110px\",\r\n\t\tmarginBottom: 20,\r\n\t\tmarginLeft: 0,\r\n\t},\r\n\tradio2: {\r\n\t\twidth: \"110px\",\r\n\t\tmarginLeft: 5,\r\n\t},\r\n\tradio3: {\r\n\t\twidth: \"110px\",\r\n\t\tmarginTop: 20,\r\n\t\tmarginLeft: 0,\r\n\t\tmarginBottom: 20,\r\n\t},\r\n\timage: {\r\n\t\tmarginTop: \"5px\",\r\n\t\theight: \"100px\",\r\n\t\tjustifySelf: \"center\",\r\n\t},\r\n\tbutton: {\r\n\t\tmarginTop: \"40px\",\r\n\t\twidth: \"110px\",\r\n\t\theight: \"40px\",\r\n\t\tbackgroundColor: \"#27AE60\",\r\n\t\tcolor: \"#FFFFFF\",\r\n\t},\r\n\tbuttonColor: {\r\n\t\tbackgroundColor: \"#27AE60\",\r\n\t\tcolor: \"#FFFFFF\",\r\n\t},\r\n\ttab: {\r\n\t\tfullWidth: true,\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\ttabPanel: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\tnavbuttons: {\r\n\t\twidth: \"100%\",\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n}));\r\n\r\nexport default function EventRegistrationForm() {\r\n\tconst utilStyle = utilStyles();\r\n\tconst classes = useStyles();\r\n\r\n\tconst [description, setDescription] = useState(\"\"); // '' is the initial state value\r\n\tconst [title, setTitle] = useState(\"\"); // '' is the initial state value\r\n\tconst [locationInput, setLocationInput] = useState(\"\"); // '' is the initial state value\r\n\tconst [maxVol, setMaxVol] = useState(\"\"); // '' is the initial state value\r\n\tlet res;\r\n\tlet history = useHistory();\r\n\r\n\tfunction handleSubmit() {\r\n\t\taxios\r\n\t\t\t.post(\"/task\", {\r\n\t\t\t\tname: title,\r\n\t\t\t\tdescription: description,\r\n\t\t\t\tvolunteer_limit: maxVol,\r\n\t\t\t\ttask_location: locationInput,\r\n\t\t\t\tarea_id: 1,\r\n\t\t\t})\r\n\t\t\t.then(function (response) {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\thistory.push(\"/volunteerPage\");\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Appbar title={\"Create New Task\"} />\r\n\t\t\t<Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tclassName={classes.root}\r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tsm={8}\r\n\t\t\t\t\tmd={5}\r\n\t\t\t\t\tcomponent={Paper}\r\n\t\t\t\t\televation={6}\r\n\t\t\t\t\tsquare\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tmy: 8,\r\n\t\t\t\t\t\t\tmx: 4,\r\n\t\t\t\t\t\t\twidth: \"400px\",\r\n\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\tflexDirection: \"column\",\r\n\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\tcomponent=\"form\"\r\n\t\t\t\t\t\t\tnoValidate\r\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\t\t\t\tsx={{ my: 0, mx: 0, width: \"400px\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\t\t\t\tlabel=\"Title\"\r\n\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"title\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tonChange={(event) => setTitle(event.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tmarginBottom=\"normal\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\tlabel=\"Description\"\r\n\t\t\t\t\t\t\t\ttype=\"description\"\r\n\t\t\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\t\t\tonChange={(event) => setDescription(event.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tmarginBottom=\"normal\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tname=\"maxVol\"\r\n\t\t\t\t\t\t\t\tlabel=\"Number of Volunteers\"\r\n\t\t\t\t\t\t\t\ttype=\"maxVol\"\r\n\t\t\t\t\t\t\t\tid=\"maxVol\"\r\n\t\t\t\t\t\t\t\tonChange={(event) => setMaxVol(event.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tmarginBottom=\"normal\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tname=\"maxVol\"\r\n\t\t\t\t\t\t\t\tlabel=\"Number of Volunteers\"\r\n\t\t\t\t\t\t\t\ttype=\"maxVol\"\r\n\t\t\t\t\t\t\t\tid=\"maxVol\"\r\n\t\t\t\t\t\t\t\tonChange={(event) => setMaxVol(event.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Grid container></Grid>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.buttonColor}\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tsx={{ mt: 3, mb: 2 }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n\t// <>\r\n\t//     <Appbar title=\"New Task Form\" />\r\n\t//     <Grid\r\n\t//         container\r\n\t//         direction=\"column\"\r\n\t//         justify=\"center\"\r\n\t//         alignItems=\"center\"\r\n\t//     >\r\n\t//         {/* <Grid item>\r\n\t//             <p className={utilStyle.title}\r\n\t//             >New Task</p>\r\n\t//         </Grid> */}\r\n\t//         <Grid item className={utilStyle.title}>\r\n\t//             <TextField\r\n\t//                 className={utilStyle.margin}\r\n\t//                 value={taskInput}\r\n\t//                 onInput={e => setTaskInput(e.target.value)}\r\n\t//                 id=\"Task-name\"\r\n\t//                 label=\"Task name?\"\r\n\t//             />\r\n\t//         </Grid>\r\n\t//         <Grid item>\r\n\t//             <TextField\r\n\t//                 className={utilStyle.margin}\r\n\t//                 id=\"description\"\r\n\t//                 label=\"Description?\"\r\n\t//                 value={description}\r\n\t//                 onInput={e => setDescription(e.target.value)}\r\n\t//             />\r\n\t//         </Grid>\r\n\t//         <Grid item>\r\n\t//             <TextField\r\n\t//                 className={utilStyle.margin}\r\n\t//                 id=\"maxVol\"\r\n\t//                 label=\"How many volunteers are needed?\"\r\n\r\n\t//                 value={maxVol}\r\n\t//                 onInput={e => setMaxVol(e.target.value)}\r\n\t//             />\r\n\t//         </Grid>\r\n\t//         <Grid item>\r\n\t//             <TextField\r\n\t//                 className={utilStyle.margin}\r\n\t//                 id=\"location\"\r\n\t//                 label=\"Location?\"\r\n\t//                 value={locationInput}\r\n\t//                 onInput={e => setLocationInput(e.target.value)}\r\n\t//             />\r\n\t//         </Grid>\r\n\t//         <Grid item>\r\n\t//             <Button\r\n\t//                 className={utilStyle.button}\r\n\t//                 onClick={() => { handleSubmit() }}>Submit</Button>\r\n\t//         </Grid>\r\n\t//         <Grid item>\r\n\t//              <img className={utilStyle.image} src=\"/images/help.png\"></img>\r\n\t//         </Grid>\r\n\t//     </Grid>\r\n\t// </>\r\n\r\n\t// );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}