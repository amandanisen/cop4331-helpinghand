{"ast":null,"code":"var _jsxFileName = \"/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/edit/edit.js\";\nimport React, { useState } from 'react';\nimport Appbar from \"../appbar/appbar.js\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAreas } from '../../redux/actions.js';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport './edit.css';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport AutoComplete from \"react-google-autocomplete\";\n\nconst buildPath = require('../../redux/buildPath');\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 40\n  },\n  image: {\n    marginTop: '5px',\n    height: '100px'\n  },\n  button: {\n    marginTop: '40px',\n    width: '110px',\n    height: '40px',\n    backgroundColor: \"#27AE60\",\n    color: '#FFFFFF'\n  },\n  buttonColor: {\n    backgroundColor: \"#27AE60\",\n    color: '#FFFFFF'\n  }\n}));\n\nfunction Edit(props) {\n  const classes = useStyles(); //const location = useLocation();\n\n  let history = useHistory();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [distance, setDistance] = useState(0); // const [radius, setRadius] = useState(0);\n  // const [message, setMessage] = useState('');\n\n  const [email, setEmail] = useState('');\n  const [location, setLocation] = useState(null);\n  const apiKey = 'AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4';\n  console.log(location);\n\n  async function handleEdit(event) {\n    event.preventDefault();\n    var email = localStorage.getItem(\"email\");\n    var obj = {\n      first_name: firstName,\n      last_name: lastName,\n      location: location,\n      accepted_distance: distance,\n      email: email\n    };\n    console.log(obj);\n    var js = JSON.stringify(obj);\n\n    try {\n      const response = await fetch(buildPath(\"/vol/edit\"), {\n        method: \"POST\",\n        body: js,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      var res = JSON.parse(await response.text());\n\n      if (res.id == -1) {\n        alert(JSON.stringify(res.error));\n      } else {\n        console.log(\"Success\");\n        history.goBack();\n      }\n    } catch (e) {\n      alert(e.toString());\n      return;\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Appbar, {\n    title: \"Edit Account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Edit2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Edit account details\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"first name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"First Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"editFirstName\",\n    id: \"editFirstName\",\n    onChange: event => setFirstName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Last Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"editLastName\",\n    id: \"editLastName\",\n    onChange: event => setLastName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"radius\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Accepted Distance:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"radius\",\n    id: \"radius\",\n    onChange: event => setDistance(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Location:\"), /*#__PURE__*/React.createElement(AutoComplete, {\n    placeholder: \"Current Location*\",\n    apiKey: \"AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4\",\n    required: true,\n    style: {\n      width: \"100%\",\n      fontSize: 16,\n      // height: 60,\n      // margin: \"0.5rem\",\n      // backgroundColor: \"#eee\",\n      display: \"inline-block\",\n      borderBottom: \"1px solid rgb(112, 111, 111)\"\n    } //  predefinedPlacesDescription: {\n    //    color: '#1faadb',\n    //  }, }}\n    ,\n    variant: \"outlined\",\n    onPlaceSelected: place => setLocation(place),\n    options: {\n      types: [\"address\"],\n      componentRestrictions: {\n        country: \"us\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Edit Details\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  })))));\n}\n\nconst mapDispatchToProps = {\n  areaAction: setAreas\n};\nexport default connect(null, mapDispatchToProps)(Edit);","map":{"version":3,"sources":["/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/edit/edit.js"],"names":["React","useState","Appbar","useLocation","connect","setAreas","useHistory","makeStyles","GooglePlacesAutocomplete","AutoComplete","buildPath","require","useStyles","theme","root","marginTop","image","height","button","width","backgroundColor","color","buttonColor","Edit","props","classes","history","firstName","setFirstName","lastName","setLastName","distance","setDistance","email","setEmail","location","setLocation","apiKey","console","log","handleEdit","event","preventDefault","localStorage","getItem","obj","first_name","last_name","accepted_distance","js","JSON","stringify","response","fetch","method","body","headers","res","parse","text","id","alert","error","goBack","e","toString","target","value","fontSize","display","borderBottom","place","types","componentRestrictions","country","mapDispatchToProps","areaAction"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Appbar from \"../appbar/appbar.js\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAreas } from '../../redux/actions.js';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport './edit.css';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport AutoComplete from \"react-google-autocomplete\";\n\nconst buildPath = require('../../redux/buildPath');\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 40,\n  },\n  image: {\n    marginTop: '5px',\n    height: '100px',\n},\n  button: {\n    marginTop: '40px',\n    width: '110px',\n    height: '40px',\n    backgroundColor: \"#27AE60\",\n    color: '#FFFFFF'\n  },\n  buttonColor: {\n    backgroundColor: \"#27AE60\",\n    color: '#FFFFFF',\n  },\n}));\n\nfunction Edit(props) {\n  const classes = useStyles();\n  //const location = useLocation();\n  \n  let history = useHistory();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [distance, setDistance] = useState(0);\n  // const [radius, setRadius] = useState(0);\n  // const [message, setMessage] = useState('');\n  const [email, setEmail] = useState('')\n  const [location, setLocation] = useState(null); \n  const apiKey = 'AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4';\n  console.log(location);\n  async function handleEdit(event)\n    {\n        event.preventDefault();\n        var email = localStorage.getItem(\"email\")\n        var obj = { first_name: firstName, last_name: lastName, location: location, accepted_distance: distance, email: email };\n        console.log(obj)\n        var js = JSON.stringify(obj);\n        \n        try {\n          const response = await fetch(buildPath(\"/vol/edit\"), {\n            method: \"POST\",\n            body: js,\n            headers: { \"Content-Type\": \"application/json\" },\n          });\n\n            var res = JSON.parse(await response.text());\n            if (res.id == -1)\n            {\n                alert(JSON.stringify(res.error));\n            }\n            else\n            {\n                console.log(\"Success\");\n                history.goBack();\n            }\n           \n        }\n        catch(e)\n        {\n            alert(e.toString());\n            return;\n        }\n  };\n  \n    return (\n\n      <>\n        <Appbar title={\"Edit Account\"} />\n        <form onSubmit={handleEdit}>\n          <div className = 'Edit2'>\n            <div className = \"form-inner\">\n              <h2>Edit account details</h2>\n              <div className = \"form-group\">\n                <label htmlFor='first name'>First Name:</label>\n                <input \n                type = 'text' \n                name = 'editFirstName' \n                id = 'editFirstName' \n                onChange = {(event) => setFirstName(event.target.value)}\n                />\n              </div>\n              <div className = \"form-group\">\n                <label htmlFor='last name'>Last Name:</label>\n                <input \n                type = 'text' \n                name = 'editLastName' \n                id = 'editLastName' \n                onChange = {(event) => setLastName(event.target.value)}\n                />\n              </div>\n              <div className = \"form-group\">\n                <label htmlFor='radius'>Accepted Distance:</label>\n                <input \n                type = 'text' \n                name = 'radius' \n                id = 'radius' \n                onChange = {(event) => setDistance(event.target.value)}\n                />\n              </div>\n              <div className = \"form-group\">\n                <label htmlFor='location'>Location:</label>\n                {/* <input \n                type = 'text' \n                name = 'editLocation' \n                id = 'editLocation' \n                onChange = {(event) => setLocation(event.target.value)}\n                /> */}\n                <AutoComplete\n                  placeholder=\"Current Location*\"\n                  apiKey=\"AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4\"\n                  required\n                  style={{\n                    width: \"100%\",\n                    fontSize: 16,\n                    // height: 60,\n                    // margin: \"0.5rem\",\n                    // backgroundColor: \"#eee\",\n                    display: \"inline-block\",\n                    borderBottom: \"1px solid rgb(112, 111, 111)\",\n                  }}\n                  //  predefinedPlacesDescription: {\n                  //    color: '#1faadb',\n                  //  }, }}\n                  variant=\"outlined\"\n                  onPlaceSelected={(place) => setLocation(place)}\n                  options={{\n                    types: [\"address\"],\n                    componentRestrictions: { country: \"us\" },\n                  }}\n                />\n              </div>\n              \n              <input type = \"submit\" value = \"Edit Details\" onClick={handleEdit}/>\n            </div>\n          </div>\n        </form>\n      </>\n    )\n\n}\nconst mapDispatchToProps = { areaAction: setAreas }\n\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Edit)\n"]},"metadata":{},"sourceType":"module"}