{"ast":null,"code":"var _jsxFileName = \"/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/taskform/taskform.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport DateAndTimePickers from \"../datePicker/datePicker.js\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useHistory } from \"react-router-dom\";\nimport Appbar from \"../appbar/appbar.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport AutoComplete from \"react-google-autocomplete\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport * as moment from \"moment\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n\nconst buildPath = require(\"../../redux/buildPath\");\n\nconst utilStyles = makeStyles(theme => ({\n  fields: {\n    \"& > *\": {\n      background: \"#F1F1F1\",\n      marginTop: \"20px\",\n      marginBottom: \"20px\",\n      // backgroundColor: \"#F1F1F1\",\n      opacity: \"0.90\" // color: \"#263238\",\n\n    }\n  },\n  date: {\n    marginTop: \"20px\"\n  },\n  margin: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    width: \"20ch\",\n    background: \"#F1F1F1\",\n    opacity: \"0.90\"\n  },\n  title: {\n    marginTop: \"40px\"\n  },\n  button: {\n    marginTop: \"40px\",\n    backgroundColor: \"#27AE60\"\n  },\n  image: {\n    marginTop: \"70px\",\n    height: \"300px\",\n    width: \"382px\",\n    alignSelf: \"center\"\n  }\n}));\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 40\n  },\n  radio1: {\n    width: \"110px\",\n    marginBottom: 20,\n    marginLeft: 0\n  },\n  radio2: {\n    width: \"110px\",\n    marginLeft: 5\n  },\n  radio3: {\n    width: \"110px\",\n    marginTop: 20,\n    marginLeft: 0,\n    marginBottom: 20\n  },\n  image: {\n    marginTop: \"5px\",\n    height: \"100px\",\n    justifySelf: \"center\"\n  },\n  button: {\n    marginTop: \"40px\",\n    width: \"110px\",\n    height: \"40px\",\n    backgroundColor: \"#27AE60\",\n    color: \"#FFFFFF\"\n  },\n  buttonColor: {\n    backgroundColor: \"#27AE60\",\n    color: \"#FFFFFF\"\n  },\n  tab: {\n    fullWidth: true,\n    textAlign: \"center\"\n  },\n  tabPanel: {\n    textAlign: \"center\"\n  },\n  navbuttons: {\n    width: \"100%\",\n    textAlign: \"center\"\n  }\n}));\nexport default function EventRegistrationForm() {\n  const utilStyle = utilStyles();\n  const classes = useStyles();\n  const [place, setLocation] = useState(null);\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [date, setDate] = React.useState(new Date(\"2014-08-18\"));\n  const [description, setDescription] = useState(\"\"); // '' is the initial state value\n\n  const [title, setTitle] = useState(\"\"); // '' is the initial state value\n\n  const [locationInput, setLocationInput] = useState(\"\"); // '' is the initial state value\n\n  const [maxVol, setMaxVol] = useState(\"\"); // '' is the initial state value\n\n  let res;\n  let history = useHistory();\n  const [selectedDate, handleDateChange] = useState(new Date());\n  var user_data = JSON.parse(localStorage.getItem(\"user_data\"));\n  var user_email = user_data.email;\n  console.log(user_email);\n\n  function isEmpty() {\n    if (title.length <= 0 || description.length <= 0 || beginDate.length <= 0 || maxVol.length <= 0 || place.formatted_address <= 0) {\n      return true;\n    }\n  }\n\n  async function handleSubmit(event) {\n    // role has just been added , Api needs to add to api call console.log(role);\n    // and make the call based on the value of role\n    // register role as well i assume\n    event.preventDefault();\n\n    if (place != null) {\n      var lati = place.geometry.location.lat();\n      var lng = place.geometry.location.lng();\n      console.log(lati, lng);\n    }\n\n    console.log(place.formatted_address);\n    const beginDate = moment(selectedDate).format(\"YYYY-MM-DD\");\n    console.log(\"ddate: \", beginDate);\n    console.log(selectedDate);\n    var obj = {\n      name: title,\n      description: description,\n      date: beginDate,\n      max_slots: maxVol,\n      latitude: lati,\n      longitude: lng,\n      email: user_email,\n      address: place.formatted_address\n    };\n    var js = JSON.stringify(obj);\n\n    try {\n      const response = await fetch(buildPath(\"/task/create\"), {\n        method: \"POST\",\n        body: js,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      var res = JSON.parse(await response.text());\n\n      if (res.id < 0) {// setMessage(res.error);\n      } else {\n        var user = {\n          id: res.id\n        };\n        console.log(user);\n        history.push(\"/coordinatorPage\");\n      }\n    } catch (e) {\n      alert(e.toString());\n      return;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Appbar, {\n    title: \"Create New Task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.root,\n    item: true,\n    xs: 12,\n    sm: 8,\n    md: 5,\n    component: Paper,\n    elevation: 6,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      my: 8,\n      mx: 4,\n      width: \"400px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    sx: {\n      my: 0,\n      mx: 0,\n      width: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"title\",\n    label: \"Title\",\n    name: \"title\",\n    autoComplete: \"title\",\n    autoFocus: true,\n    onChange: event => setTitle(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    marginBottom: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"description\",\n    label: \"Description\",\n    type: \"description\",\n    id: \"description\",\n    onChange: event => setDescription(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    marginBottom: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"maxVol\",\n    label: \"Number of Volunteers\",\n    type: \"maxVol\",\n    id: \"maxVol\",\n    onChange: event => setMaxVol(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(AutoComplete, {\n    placeholder: \"Location*\",\n    apiKey: \"AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4\",\n    required: true,\n    style: {\n      width: \"100%\",\n      fontSize: 16,\n      // height: 60,\n      marginTop: \"1.5rem\",\n      marginBottom: \"0.5rem\",\n      // backgroundColor: \"#eee\",\n      display: \"inline-block\",\n      borderBottom: \"1px solid rgb(112, 111, 111)\"\n    } //  predefinedPlacesDescription: {\n    //    color: '#1faadb',\n    //  }, }}\n    ,\n    variant: \"outlined\",\n    onPlaceSelected: place => setLocation(place),\n    options: {\n      types: [\"address\"],\n      componentRestrictions: {\n        country: \"us\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    style: {\n      marginTop: \"1.5rem\"\n    },\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    style: {\n      marginTop: \"1.5rem\"\n    },\n    autoOk: true,\n    variant: \"inline\",\n    inputVariant: \"outlined\",\n    label: \"Date of Task\",\n    format: \"MM/dd/yyyy\",\n    value: selectedDate,\n    InputAdornmentProps: {\n      position: \"start\"\n    },\n    onChange: date => handleDateChange(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonColor,\n    type: \"submit\",\n    fullWidth: true,\n    style: {\n      marginTop: \"1.5rem\"\n    },\n    variant: \"contained\",\n    sx: {\n      mt: 3,\n      mb: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 8\n    }\n  }, \"Create\")))))); // <>\n  //     <Appbar title=\"New Task Form\" />\n  //     <Grid\n  //         container\n  //         direction=\"column\"\n  //         justify=\"center\"\n  //         alignItems=\"center\"\n  //     >\n  //         {/* <Grid item>\n  //             <p className={utilStyle.title}\n  //             >New Task</p>\n  //         </Grid> */}\n  //         <Grid item className={utilStyle.title}>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 value={taskInput}\n  //                 onInput={e => setTaskInput(e.target.value)}\n  //                 id=\"Task-name\"\n  //                 label=\"Task name?\"\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"description\"\n  //                 label=\"Description?\"\n  //                 value={description}\n  //                 onInput={e => setDescription(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"maxVol\"\n  //                 label=\"How many volunteers are needed?\"\n  //                 value={maxVol}\n  //                 onInput={e => setMaxVol(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"location\"\n  //                 label=\"Location?\"\n  //                 value={locationInput}\n  //                 onInput={e => setLocationInput(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <Button\n  //                 className={utilStyle.button}\n  //                 onClick={() => { handleSubmit() }}>Submit</Button>\n  //         </Grid>\n  //         <Grid item>\n  //              <img className={utilStyle.image} src=\"/images/help.png\"></img>\n  //         </Grid>\n  //     </Grid>\n  // </>\n  // );\n}","map":{"version":3,"sources":["/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/taskform/taskform.js"],"names":["React","makeStyles","TextField","AccountCircle","DateAndTimePickers","InputAdornment","Button","axios","useState","Grid","useHistory","Appbar","Paper","Box","AutoComplete","DateFnsUtils","moment","KeyboardDatePicker","MuiPickersUtilsProvider","buildPath","require","utilStyles","theme","fields","background","marginTop","marginBottom","opacity","date","margin","width","title","button","backgroundColor","image","height","alignSelf","useStyles","root","radio1","marginLeft","radio2","radio3","justifySelf","color","buttonColor","tab","fullWidth","textAlign","tabPanel","navbuttons","EventRegistrationForm","utilStyle","classes","place","setLocation","lat","setLat","long","setLong","setDate","Date","description","setDescription","setTitle","locationInput","setLocationInput","maxVol","setMaxVol","res","history","selectedDate","handleDateChange","user_data","JSON","parse","localStorage","getItem","user_email","email","console","log","isEmpty","length","beginDate","formatted_address","handleSubmit","event","preventDefault","lati","geometry","location","lng","format","obj","name","max_slots","latitude","longitude","address","js","stringify","response","fetch","method","body","headers","text","id","user","push","e","alert","toString","my","mx","display","flexDirection","alignItems","target","value","fontSize","borderBottom","types","componentRestrictions","country","position","mt","mb"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AAEA,SACCC,kBADD,EAECC,uBAFD,QAGO,sBAHP;;AAIA,MAAMC,SAAS,GAAGC,OAAO,CAAC,uBAAD,CAAzB;;AAEA,MAAMC,UAAU,GAAGpB,UAAU,CAAEqB,KAAD,KAAY;AACzCC,EAAAA,MAAM,EAAE;AACP,aAAS;AACRC,MAAAA,UAAU,EAAE,SADJ;AAERC,MAAAA,SAAS,EAAE,MAFH;AAGRC,MAAAA,YAAY,EAAE,MAHN;AAIR;AACAC,MAAAA,OAAO,EAAE,MALD,CAOR;;AAPQ;AADF,GADiC;AAYzCC,EAAAA,IAAI,EAAE;AACLH,IAAAA,SAAS,EAAE;AADN,GAZmC;AAezCI,EAAAA,MAAM,EAAE;AACPJ,IAAAA,SAAS,EAAE,MADJ;AAEPC,IAAAA,YAAY,EAAE,MAFP;AAGPI,IAAAA,KAAK,EAAE,MAHA;AAIPN,IAAAA,UAAU,EAAE,SAJL;AAKPG,IAAAA,OAAO,EAAE;AALF,GAfiC;AAsBzCI,EAAAA,KAAK,EAAE;AACNN,IAAAA,SAAS,EAAE;AADL,GAtBkC;AAyBzCO,EAAAA,MAAM,EAAE;AACPP,IAAAA,SAAS,EAAE,MADJ;AAEPQ,IAAAA,eAAe,EAAE;AAFV,GAzBiC;AA6BzCC,EAAAA,KAAK,EAAE;AACNT,IAAAA,SAAS,EAAE,MADL;AAENU,IAAAA,MAAM,EAAE,OAFF;AAGNL,IAAAA,KAAK,EAAE,OAHD;AAINM,IAAAA,SAAS,EAAE;AAJL;AA7BkC,CAAZ,CAAD,CAA7B;AAqCA,MAAMC,SAAS,GAAGpC,UAAU,CAAEqB,KAAD,KAAY;AACxCgB,EAAAA,IAAI,EAAE;AACLb,IAAAA,SAAS,EAAE;AADN,GADkC;AAIxCc,EAAAA,MAAM,EAAE;AACPT,IAAAA,KAAK,EAAE,OADA;AAEPJ,IAAAA,YAAY,EAAE,EAFP;AAGPc,IAAAA,UAAU,EAAE;AAHL,GAJgC;AASxCC,EAAAA,MAAM,EAAE;AACPX,IAAAA,KAAK,EAAE,OADA;AAEPU,IAAAA,UAAU,EAAE;AAFL,GATgC;AAaxCE,EAAAA,MAAM,EAAE;AACPZ,IAAAA,KAAK,EAAE,OADA;AAEPL,IAAAA,SAAS,EAAE,EAFJ;AAGPe,IAAAA,UAAU,EAAE,CAHL;AAIPd,IAAAA,YAAY,EAAE;AAJP,GAbgC;AAmBxCQ,EAAAA,KAAK,EAAE;AACNT,IAAAA,SAAS,EAAE,KADL;AAENU,IAAAA,MAAM,EAAE,OAFF;AAGNQ,IAAAA,WAAW,EAAE;AAHP,GAnBiC;AAwBxCX,EAAAA,MAAM,EAAE;AACPP,IAAAA,SAAS,EAAE,MADJ;AAEPK,IAAAA,KAAK,EAAE,OAFA;AAGPK,IAAAA,MAAM,EAAE,MAHD;AAIPF,IAAAA,eAAe,EAAE,SAJV;AAKPW,IAAAA,KAAK,EAAE;AALA,GAxBgC;AA+BxCC,EAAAA,WAAW,EAAE;AACZZ,IAAAA,eAAe,EAAE,SADL;AAEZW,IAAAA,KAAK,EAAE;AAFK,GA/B2B;AAmCxCE,EAAAA,GAAG,EAAE;AACJC,IAAAA,SAAS,EAAE,IADP;AAEJC,IAAAA,SAAS,EAAE;AAFP,GAnCmC;AAuCxCC,EAAAA,QAAQ,EAAE;AACTD,IAAAA,SAAS,EAAE;AADF,GAvC8B;AA0CxCE,EAAAA,UAAU,EAAE;AACXpB,IAAAA,KAAK,EAAE,MADI;AAEXkB,IAAAA,SAAS,EAAE;AAFA;AA1C4B,CAAZ,CAAD,CAA5B;AAgDA,eAAe,SAASG,qBAAT,GAAiC;AAC/C,QAAMC,SAAS,GAAG/B,UAAU,EAA5B;AACA,QAAMgC,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAM,CAACiB,KAAD,EAAQC,WAAR,IAAuB/C,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACgD,GAAD,EAAMC,MAAN,IAAgBjD,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACkD,IAAD,EAAOC,OAAP,IAAkBnD,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoB,IAAD,EAAOgC,OAAP,IAAkB5D,KAAK,CAACQ,QAAN,CAAe,IAAIqD,IAAJ,CAAS,YAAT,CAAf,CAAxB;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCvD,QAAQ,CAAC,EAAD,CAA9C,CAR+C,CAQK;;AACpD,QAAM,CAACuB,KAAD,EAAQiC,QAAR,IAAoBxD,QAAQ,CAAC,EAAD,CAAlC,CAT+C,CASP;;AACxC,QAAM,CAACyD,aAAD,EAAgBC,gBAAhB,IAAoC1D,QAAQ,CAAC,EAAD,CAAlD,CAV+C,CAUS;;AACxD,QAAM,CAAC2D,MAAD,EAASC,SAAT,IAAsB5D,QAAQ,CAAC,EAAD,CAApC,CAX+C,CAWL;;AAC1C,MAAI6D,GAAJ;AACA,MAAIC,OAAO,GAAG5D,UAAU,EAAxB;AACA,QAAM,CAAC6D,YAAD,EAAeC,gBAAf,IAAmChE,QAAQ,CAAC,IAAIqD,IAAJ,EAAD,CAAjD;AACA,MAAIY,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAhB;AACA,MAAIC,UAAU,GAAGL,SAAS,CAACM,KAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;;AAEA,WAASI,OAAT,GAAmB;AAClB,QACCnD,KAAK,CAACoD,MAAN,IAAgB,CAAhB,IACArB,WAAW,CAACqB,MAAZ,IAAsB,CADtB,IAEAC,SAAS,CAACD,MAAV,IAAoB,CAFpB,IAGAhB,MAAM,CAACgB,MAAP,IAAiB,CAHjB,IAIA7B,KAAK,CAAC+B,iBAAN,IAA2B,CAL5B,EAME;AACD,aAAO,IAAP;AACA;AACD;;AAED,iBAAeC,YAAf,CAA4BC,KAA5B,EAAmC;AAClC;AACA;AACA;AACAA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAIlC,KAAK,IAAI,IAAb,EAAmB;AAClB,UAAImC,IAAI,GAAGnC,KAAK,CAACoC,QAAN,CAAeC,QAAf,CAAwBnC,GAAxB,EAAX;AACA,UAAIoC,GAAG,GAAGtC,KAAK,CAACoC,QAAN,CAAeC,QAAf,CAAwBC,GAAxB,EAAV;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ,EAAkBG,GAAlB;AACA;;AACDZ,IAAAA,OAAO,CAACC,GAAR,CAAY3B,KAAK,CAAC+B,iBAAlB;AACA,UAAMD,SAAS,GAAGpE,MAAM,CAACuD,YAAD,CAAN,CAAqBsB,MAArB,CAA4B,YAA5B,CAAlB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBG,SAAvB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACA,QAAIuB,GAAG,GAAG;AACTC,MAAAA,IAAI,EAAEhE,KADG;AAET+B,MAAAA,WAAW,EAAEA,WAFJ;AAGTlC,MAAAA,IAAI,EAAEwD,SAHG;AAITY,MAAAA,SAAS,EAAE7B,MAJF;AAKT8B,MAAAA,QAAQ,EAAER,IALD;AAMTS,MAAAA,SAAS,EAAEN,GANF;AAOTb,MAAAA,KAAK,EAAED,UAPE;AAQTqB,MAAAA,OAAO,EAAE7C,KAAK,CAAC+B;AARN,KAAV;AAUA,QAAIe,EAAE,GAAG1B,IAAI,CAAC2B,SAAL,CAAeP,GAAf,CAAT;;AAEA,QAAI;AACH,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACpF,SAAS,CAAC,cAAD,CAAV,EAA4B;AACvDqF,QAAAA,MAAM,EAAE,MAD+C;AAEvDC,QAAAA,IAAI,EAAEL,EAFiD;AAGvDM,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAH8C,OAA5B,CAA5B;AAMA,UAAIrC,GAAG,GAAGK,IAAI,CAACC,KAAL,CAAW,MAAM2B,QAAQ,CAACK,IAAT,EAAjB,CAAV;;AACA,UAAItC,GAAG,CAACuC,EAAJ,GAAS,CAAb,EAAgB,CACf;AACA,OAFD,MAEO;AACN,YAAIC,IAAI,GAAG;AACVD,UAAAA,EAAE,EAAEvC,GAAG,CAACuC;AADE,SAAX;AAGA5B,QAAAA,OAAO,CAACC,GAAR,CAAY4B,IAAZ;AAEAvC,QAAAA,OAAO,CAACwC,IAAR,CAAa,kBAAb;AACA;AACD,KAlBD,CAkBE,OAAOC,CAAP,EAAU;AACXC,MAAAA,KAAK,CAACD,CAAC,CAACE,QAAF,EAAD,CAAL;AACA;AACA;AACD;;AAED,sBACC,uDACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,OAAO,EAAC,QAA3C;AAAoD,IAAA,UAAU,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AACC,IAAA,SAAS,EAAE5D,OAAO,CAACf,IADpB;AAEC,IAAA,IAAI,MAFL;AAGC,IAAA,EAAE,EAAE,EAHL;AAIC,IAAA,EAAE,EAAE,CAJL;AAKC,IAAA,EAAE,EAAE,CALL;AAMC,IAAA,SAAS,EAAE1B,KANZ;AAOC,IAAA,SAAS,EAAE,CAPZ;AAQC,IAAA,MAAM,MARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUC,oBAAC,GAAD;AACC,IAAA,EAAE,EAAE;AACHsG,MAAAA,EAAE,EAAE,CADD;AAEHC,MAAAA,EAAE,EAAE,CAFD;AAGHrF,MAAAA,KAAK,EAAE,OAHJ;AAIHsF,MAAAA,OAAO,EAAE,MAJN;AAKHC,MAAAA,aAAa,EAAE,QALZ;AAMHC,MAAAA,UAAU,EAAE;AANT,KADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUC,oBAAC,GAAD;AACC,IAAA,SAAS,EAAC,MADX;AAEC,IAAA,UAAU,MAFX;AAGC,IAAA,QAAQ,EAAEhC,YAHX;AAIC,IAAA,EAAE,EAAE;AAAE4B,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE,CAAb;AAAgBrF,MAAAA,KAAK,EAAE;AAAvB,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMC,oBAAC,SAAD;AACC,IAAA,MAAM,EAAC,QADR;AAEC,IAAA,QAAQ,MAFT;AAGC,IAAA,SAAS,MAHV;AAIC,IAAA,EAAE,EAAC,OAJJ;AAKC,IAAA,KAAK,EAAC,OALP;AAMC,IAAA,IAAI,EAAC,OANN;AAOC,IAAA,YAAY,EAAC,OAPd;AAQC,IAAA,SAAS,MARV;AASC,IAAA,QAAQ,EAAGyD,KAAD,IAAWvB,QAAQ,CAACuB,KAAK,CAACgC,MAAN,CAAaC,KAAd,CAT9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,eAiBC,oBAAC,SAAD;AACC,IAAA,YAAY,EAAC,QADd;AAEC,IAAA,QAAQ,MAFT;AAGC,IAAA,SAAS,MAHV;AAIC,IAAA,IAAI,EAAC,aAJN;AAKC,IAAA,KAAK,EAAC,aALP;AAMC,IAAA,IAAI,EAAC,aANN;AAOC,IAAA,EAAE,EAAC,aAPJ;AAQC,IAAA,QAAQ,EAAGjC,KAAD,IAAWxB,cAAc,CAACwB,KAAK,CAACgC,MAAN,CAAaC,KAAd,CARpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBD,eA2BC,oBAAC,SAAD;AACC,IAAA,YAAY,EAAC,QADd;AAEC,IAAA,QAAQ,MAFT;AAGC,IAAA,SAAS,MAHV;AAIC,IAAA,IAAI,EAAC,QAJN;AAKC,IAAA,KAAK,EAAC,sBALP;AAMC,IAAA,IAAI,EAAC,QANN;AAOC,IAAA,EAAE,EAAC,QAPJ;AAQC,IAAA,QAAQ,EAAGjC,KAAD,IAAWnB,SAAS,CAACmB,KAAK,CAACgC,MAAN,CAAaC,KAAd,CAR/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BD,eAsCC,oBAAC,YAAD;AACC,IAAA,WAAW,EAAC,WADb;AAEC,IAAA,MAAM,EAAC,yCAFR;AAGC,IAAA,QAAQ,MAHT;AAIC,IAAA,KAAK,EAAE;AACN1F,MAAAA,KAAK,EAAE,MADD;AAEN2F,MAAAA,QAAQ,EAAE,EAFJ;AAGN;AACAhG,MAAAA,SAAS,EAAE,QAJL;AAKNC,MAAAA,YAAY,EAAE,QALR;AAMN;AACA0F,MAAAA,OAAO,EAAE,cAPH;AAQNM,MAAAA,YAAY,EAAE;AARR,KAJR,CAcC;AACA;AACA;AAhBD;AAiBC,IAAA,OAAO,EAAC,UAjBT;AAkBC,IAAA,eAAe,EAAGpE,KAAD,IAAWC,WAAW,CAACD,KAAD,CAlBxC;AAmBC,IAAA,OAAO,EAAE;AACRqE,MAAAA,KAAK,EAAE,CAAC,SAAD,CADC;AAERC,MAAAA,qBAAqB,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAFf,KAnBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCD,eA8DC,oBAAC,uBAAD;AACC,IAAA,KAAK,EAAE;AAAEpG,MAAAA,SAAS,EAAE;AAAb,KADR;AAEC,IAAA,KAAK,EAAEV,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIC,oBAAC,kBAAD;AACC,IAAA,KAAK,EAAE;AAAEU,MAAAA,SAAS,EAAE;AAAb,KADR;AAEC,IAAA,MAAM,MAFP;AAGC,IAAA,OAAO,EAAC,QAHT;AAIC,IAAA,YAAY,EAAC,UAJd;AAKC,IAAA,KAAK,EAAC,cALP;AAMC,IAAA,MAAM,EAAC,YANR;AAOC,IAAA,KAAK,EAAE8C,YAPR;AAQC,IAAA,mBAAmB,EAAE;AAAEuD,MAAAA,QAAQ,EAAE;AAAZ,KARtB;AASC,IAAA,QAAQ,EAAGlG,IAAD,IAAU4C,gBAAgB,CAAC5C,IAAD,CATrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CA9DD,eA+EC,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/ED,eAiFC,oBAAC,MAAD;AACC,IAAA,SAAS,EAAEyB,OAAO,CAACR,WADpB;AAEC,IAAA,IAAI,EAAC,QAFN;AAGC,IAAA,SAAS,MAHV;AAIC,IAAA,KAAK,EAAE;AAAEpB,MAAAA,SAAS,EAAE;AAAb,KAJR;AAKC,IAAA,OAAO,EAAC,WALT;AAMC,IAAA,EAAE,EAAE;AAAEsG,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE;AAAb,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjFD,CAVD,CAVD,CADD,CAFD,CADD,CAlF+C,CA2M/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport DateAndTimePickers from \"../datePicker/datePicker.js\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useHistory } from \"react-router-dom\";\nimport Appbar from \"../appbar/appbar.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport AutoComplete from \"react-google-autocomplete\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport * as moment from \"moment\";\n\nimport {\n\tKeyboardDatePicker,\n\tMuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nconst buildPath = require(\"../../redux/buildPath\");\n\nconst utilStyles = makeStyles((theme) => ({\n\tfields: {\n\t\t\"& > *\": {\n\t\t\tbackground: \"#F1F1F1\",\n\t\t\tmarginTop: \"20px\",\n\t\t\tmarginBottom: \"20px\",\n\t\t\t// backgroundColor: \"#F1F1F1\",\n\t\t\topacity: \"0.90\",\n\n\t\t\t// color: \"#263238\",\n\t\t},\n\t},\n\tdate: {\n\t\tmarginTop: \"20px\",\n\t},\n\tmargin: {\n\t\tmarginTop: \"10px\",\n\t\tmarginBottom: \"10px\",\n\t\twidth: \"20ch\",\n\t\tbackground: \"#F1F1F1\",\n\t\topacity: \"0.90\",\n\t},\n\ttitle: {\n\t\tmarginTop: \"40px\",\n\t},\n\tbutton: {\n\t\tmarginTop: \"40px\",\n\t\tbackgroundColor: \"#27AE60\",\n\t},\n\timage: {\n\t\tmarginTop: \"70px\",\n\t\theight: \"300px\",\n\t\twidth: \"382px\",\n\t\talignSelf: \"center\",\n\t},\n}));\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmarginTop: 40,\n\t},\n\tradio1: {\n\t\twidth: \"110px\",\n\t\tmarginBottom: 20,\n\t\tmarginLeft: 0,\n\t},\n\tradio2: {\n\t\twidth: \"110px\",\n\t\tmarginLeft: 5,\n\t},\n\tradio3: {\n\t\twidth: \"110px\",\n\t\tmarginTop: 20,\n\t\tmarginLeft: 0,\n\t\tmarginBottom: 20,\n\t},\n\timage: {\n\t\tmarginTop: \"5px\",\n\t\theight: \"100px\",\n\t\tjustifySelf: \"center\",\n\t},\n\tbutton: {\n\t\tmarginTop: \"40px\",\n\t\twidth: \"110px\",\n\t\theight: \"40px\",\n\t\tbackgroundColor: \"#27AE60\",\n\t\tcolor: \"#FFFFFF\",\n\t},\n\tbuttonColor: {\n\t\tbackgroundColor: \"#27AE60\",\n\t\tcolor: \"#FFFFFF\",\n\t},\n\ttab: {\n\t\tfullWidth: true,\n\t\ttextAlign: \"center\",\n\t},\n\ttabPanel: {\n\t\ttextAlign: \"center\",\n\t},\n\tnavbuttons: {\n\t\twidth: \"100%\",\n\t\ttextAlign: \"center\",\n\t},\n}));\n\nexport default function EventRegistrationForm() {\n\tconst utilStyle = utilStyles();\n\tconst classes = useStyles();\n\tconst [place, setLocation] = useState(null);\n\tconst [lat, setLat] = useState(\"\");\n\tconst [long, setLong] = useState(\"\");\n\tconst [date, setDate] = React.useState(new Date(\"2014-08-18\"));\n\n\tconst [description, setDescription] = useState(\"\"); // '' is the initial state value\n\tconst [title, setTitle] = useState(\"\"); // '' is the initial state value\n\tconst [locationInput, setLocationInput] = useState(\"\"); // '' is the initial state value\n\tconst [maxVol, setMaxVol] = useState(\"\"); // '' is the initial state value\n\tlet res;\n\tlet history = useHistory();\n\tconst [selectedDate, handleDateChange] = useState(new Date());\n\tvar user_data = JSON.parse(localStorage.getItem(\"user_data\"));\n\tvar user_email = user_data.email;\n\tconsole.log(user_email);\n\n\tfunction isEmpty() {\n\t\tif (\n\t\t\ttitle.length <= 0 ||\n\t\t\tdescription.length <= 0 ||\n\t\t\tbeginDate.length <= 0 ||\n\t\t\tmaxVol.length <= 0 ||\n\t\t\tplace.formatted_address <= 0\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tasync function handleSubmit(event) {\n\t\t// role has just been added , Api needs to add to api call console.log(role);\n\t\t// and make the call based on the value of role\n\t\t// register role as well i assume\n\t\tevent.preventDefault();\n\n\t\tif (place != null) {\n\t\t\tvar lati = place.geometry.location.lat();\n\t\t\tvar lng = place.geometry.location.lng();\n\t\t\tconsole.log(lati, lng);\n\t\t}\n\t\tconsole.log(place.formatted_address);\n\t\tconst beginDate = moment(selectedDate).format(\"YYYY-MM-DD\");\n\t\tconsole.log(\"ddate: \", beginDate);\n\t\tconsole.log(selectedDate);\n\t\tvar obj = {\n\t\t\tname: title,\n\t\t\tdescription: description,\n\t\t\tdate: beginDate,\n\t\t\tmax_slots: maxVol,\n\t\t\tlatitude: lati,\n\t\t\tlongitude: lng,\n\t\t\temail: user_email,\n\t\t\taddress: place.formatted_address,\n\t\t};\n\t\tvar js = JSON.stringify(obj);\n\n\t\ttry {\n\t\t\tconst response = await fetch(buildPath(\"/task/create\"), {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: js,\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t});\n\n\t\t\tvar res = JSON.parse(await response.text());\n\t\t\tif (res.id < 0) {\n\t\t\t\t// setMessage(res.error);\n\t\t\t} else {\n\t\t\t\tvar user = {\n\t\t\t\t\tid: res.id,\n\t\t\t\t};\n\t\t\t\tconsole.log(user);\n\n\t\t\t\thistory.push(\"/coordinatorPage\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\talert(e.toString());\n\t\t\treturn;\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Appbar title={\"Create New Task\"} />\n\t\t\t<Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n\t\t\t\t<Grid\n\t\t\t\t\tclassName={classes.root}\n\t\t\t\t\titem\n\t\t\t\t\txs={12}\n\t\t\t\t\tsm={8}\n\t\t\t\t\tmd={5}\n\t\t\t\t\tcomponent={Paper}\n\t\t\t\t\televation={6}\n\t\t\t\t\tsquare\n\t\t\t\t>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tmy: 8,\n\t\t\t\t\t\t\tmx: 4,\n\t\t\t\t\t\t\twidth: \"400px\",\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tcomponent=\"form\"\n\t\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t\tsx={{ my: 0, mx: 0, width: \"400px\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"title\"\n\t\t\t\t\t\t\t\tlabel=\"Title\"\n\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\tautoComplete=\"title\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tonChange={(event) => setTitle(event.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tmarginBottom=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\t\t\ttype=\"description\"\n\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\tonChange={(event) => setDescription(event.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tmarginBottom=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"maxVol\"\n\t\t\t\t\t\t\t\tlabel=\"Number of Volunteers\"\n\t\t\t\t\t\t\t\ttype=\"maxVol\"\n\t\t\t\t\t\t\t\tid=\"maxVol\"\n\t\t\t\t\t\t\t\tonChange={(event) => setMaxVol(event.target.value)}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<AutoComplete\n\t\t\t\t\t\t\t\tplaceholder=\"Location*\"\n\t\t\t\t\t\t\t\tapiKey=\"AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\tfontSize: 16,\n\t\t\t\t\t\t\t\t\t// height: 60,\n\t\t\t\t\t\t\t\t\tmarginTop: \"1.5rem\",\n\t\t\t\t\t\t\t\t\tmarginBottom: \"0.5rem\",\n\t\t\t\t\t\t\t\t\t// backgroundColor: \"#eee\",\n\t\t\t\t\t\t\t\t\tdisplay: \"inline-block\",\n\t\t\t\t\t\t\t\t\tborderBottom: \"1px solid rgb(112, 111, 111)\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t//  predefinedPlacesDescription: {\n\t\t\t\t\t\t\t\t//    color: '#1faadb',\n\t\t\t\t\t\t\t\t//  }, }}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonPlaceSelected={(place) => setLocation(place)}\n\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\ttypes: [\"address\"],\n\t\t\t\t\t\t\t\t\tcomponentRestrictions: { country: \"us\" },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<MuiPickersUtilsProvider\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"1.5rem\" }}\n\t\t\t\t\t\t\t\tutils={DateFnsUtils}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\t\t\tstyle={{ marginTop: \"1.5rem\" }}\n\t\t\t\t\t\t\t\t\tautoOk\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t\tinputVariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tlabel=\"Date of Task\"\n\t\t\t\t\t\t\t\t\tformat=\"MM/dd/yyyy\"\n\t\t\t\t\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\t\t\t\t\tInputAdornmentProps={{ position: \"start\" }}\n\t\t\t\t\t\t\t\t\tonChange={(date) => handleDateChange(date)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\n\n\t\t\t\t\t\t\t<Grid container></Grid>\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.buttonColor}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"1.5rem\" }}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tsx={{ mt: 3, mb: 2 }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</>\n\t);\n\t// <>\n\t//     <Appbar title=\"New Task Form\" />\n\t//     <Grid\n\t//         container\n\t//         direction=\"column\"\n\t//         justify=\"center\"\n\t//         alignItems=\"center\"\n\t//     >\n\t//         {/* <Grid item>\n\t//             <p className={utilStyle.title}\n\t//             >New Task</p>\n\t//         </Grid> */}\n\t//         <Grid item className={utilStyle.title}>\n\t//             <TextField\n\t//                 className={utilStyle.margin}\n\t//                 value={taskInput}\n\t//                 onInput={e => setTaskInput(e.target.value)}\n\t//                 id=\"Task-name\"\n\t//                 label=\"Task name?\"\n\t//             />\n\t//         </Grid>\n\t//         <Grid item>\n\t//             <TextField\n\t//                 className={utilStyle.margin}\n\t//                 id=\"description\"\n\t//                 label=\"Description?\"\n\t//                 value={description}\n\t//                 onInput={e => setDescription(e.target.value)}\n\t//             />\n\t//         </Grid>\n\t//         <Grid item>\n\t//             <TextField\n\t//                 className={utilStyle.margin}\n\t//                 id=\"maxVol\"\n\t//                 label=\"How many volunteers are needed?\"\n\n\t//                 value={maxVol}\n\t//                 onInput={e => setMaxVol(e.target.value)}\n\t//             />\n\t//         </Grid>\n\t//         <Grid item>\n\t//             <TextField\n\t//                 className={utilStyle.margin}\n\t//                 id=\"location\"\n\t//                 label=\"Location?\"\n\t//                 value={locationInput}\n\t//                 onInput={e => setLocationInput(e.target.value)}\n\t//             />\n\t//         </Grid>\n\t//         <Grid item>\n\t//             <Button\n\t//                 className={utilStyle.button}\n\t//                 onClick={() => { handleSubmit() }}>Submit</Button>\n\t//         </Grid>\n\t//         <Grid item>\n\t//              <img className={utilStyle.image} src=\"/images/help.png\"></img>\n\t//         </Grid>\n\t//     </Grid>\n\t// </>\n\n\t// );\n}\n"]},"metadata":{},"sourceType":"module"}