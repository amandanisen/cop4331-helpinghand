{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lando\\\\Documents\\\\GitHub\\\\cop4331-helpinghand\\\\frontend\\\\src\\\\components\\\\taskform\\\\taskform.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport DateAndTimePickers from '../datePicker/datePicker.js';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from \"react-router-dom\";\nimport Appbar from \"../appbar/appbar.js\";\nconst utilStyles = makeStyles(theme => ({\n  fields: {\n    '& > *': {\n      background: \"#F1F1F1\",\n      marginTop: '20px',\n      marginBottom: '20px',\n      // backgroundColor: \"#F1F1F1\",\n      opacity: \"0.90\" // color: \"#263238\",\n\n    }\n  },\n  date: {\n    marginTop: '20px'\n  },\n  margin: {\n    marginTop: '10px',\n    marginBottom: '10px',\n    width: '20ch',\n    background: \"#F1F1F1\",\n    opacity: \"0.90\"\n  },\n  title: {\n    marginTop: '40px'\n  },\n  button: {\n    marginTop: '40px',\n    backgroundColor: \"#27AE60\"\n  },\n  image: {\n    marginTop: '70px',\n    height: '300px',\n    width: '382px',\n    alignSelf: 'center'\n  }\n}));\nexport default function EventRegistrationForm() {\n  const utilStyle = utilStyles();\n  const [description, setDescription] = useState(''); // '' is the initial state value\n\n  const [taskInput, setTaskInput] = useState(''); // '' is the initial state value\n\n  const [locationInput, setLocationInput] = useState(''); // '' is the initial state value\n\n  const [maxVol, setMaxVol] = useState(''); // '' is the initial state value\n\n  let res;\n  let history = useHistory();\n\n  function handleSubmit() {\n    axios.post('/task', {\n      name: taskInput,\n      description: description,\n      volunteer_limit: maxVol,\n      task_location: locationInput,\n      area_id: 1\n    }).then(function (response) {\n      console.log(response);\n      history.push(\"/volunteerPage\");\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Appbar, {\n    title: \"New Task Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: utilStyle.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: utilStyle.margin,\n    value: taskInput,\n    onInput: e => setTaskInput(e.target.value),\n    id: \"Task-name\",\n    label: \"Task name?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: utilStyle.margin,\n    id: \"description\",\n    label: \"Description?\",\n    value: description,\n    onInput: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: utilStyle.margin,\n    id: \"maxVol\",\n    label: \"How many volunteers are needed?\",\n    value: maxVol,\n    onInput: e => setMaxVol(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: utilStyle.margin,\n    id: \"location\",\n    label: \"Location?\",\n    value: locationInput,\n    onInput: e => setLocationInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: utilStyle.button,\n    onClick: () => {\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: utilStyle.image,\n    src: \"/images/help.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 22\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/lando/Documents/GitHub/cop4331-helpinghand/frontend/src/components/taskform/taskform.js"],"names":["React","makeStyles","TextField","AccountCircle","DateAndTimePickers","InputAdornment","Button","axios","useState","Grid","useHistory","Appbar","utilStyles","theme","fields","background","marginTop","marginBottom","opacity","date","margin","width","title","button","backgroundColor","image","height","alignSelf","EventRegistrationForm","utilStyle","description","setDescription","taskInput","setTaskInput","locationInput","setLocationInput","maxVol","setMaxVol","res","history","handleSubmit","post","name","volunteer_limit","task_location","area_id","then","response","console","log","push","catch","error","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport DateAndTimePickers from '../datePicker/datePicker.js'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from \"axios\"\r\nimport { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Appbar from \"../appbar/appbar.js\"\r\n\r\n\r\nconst utilStyles = makeStyles((theme) => ({\r\n    fields: {\r\n        '& > *': {\r\n\r\n            background: \"#F1F1F1\",\r\n            marginTop: '20px',\r\n            marginBottom: '20px',\r\n            // backgroundColor: \"#F1F1F1\",\r\n            opacity: \"0.90\",\r\n\r\n            // color: \"#263238\",\r\n        },\r\n    },\r\n    date: {\r\n        marginTop: '20px',\r\n    },\r\n    margin: {\r\n        marginTop: '10px',\r\n        marginBottom: '10px',\r\n        width: '20ch',\r\n        background: \"#F1F1F1\",\r\n        opacity: \"0.90\",\r\n    \r\n    },\r\n    title: {\r\n        marginTop: '40px',\r\n    },\r\n    button: {\r\n        marginTop: '40px',\r\n        backgroundColor: \"#27AE60\",\r\n\r\n    },\r\n    image: {\r\n        marginTop: '70px',\r\n        height: '300px',\r\n        width: '382px',\r\n        alignSelf: 'center',\r\n    \r\n      },\r\n}));\r\n\r\n\r\nexport default function EventRegistrationForm() {\r\n    const utilStyle = utilStyles();\r\n    const [description, setDescription] = useState(''); // '' is the initial state value\r\n    const [taskInput, setTaskInput] = useState(''); // '' is the initial state value\r\n    const [locationInput, setLocationInput] = useState(''); // '' is the initial state value\r\n    const [maxVol, setMaxVol] = useState(''); // '' is the initial state value\r\n    let res;\r\n    let history = useHistory();\r\n\r\n    function handleSubmit() {\r\n        axios.post('/task', {\r\n            name: taskInput,\r\n            description: description,\r\n            volunteer_limit: maxVol,\r\n            task_location: locationInput,\r\n            area_id: 1\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                history.push(\"/volunteerPage\");\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n            <Appbar title=\"New Task Form\" />\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                {/* <Grid item>\r\n                    <p className={utilStyle.title}\r\n                    >New Task</p>\r\n                </Grid> */}\r\n                <Grid item className={utilStyle.title}>\r\n                    <TextField\r\n                        className={utilStyle.margin}\r\n                        value={taskInput}\r\n                        onInput={e => setTaskInput(e.target.value)}\r\n                        id=\"Task-name\"\r\n                        label=\"Task name?\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        className={utilStyle.margin}\r\n                        id=\"description\"\r\n                        label=\"Description?\"\r\n                        value={description}\r\n                        onInput={e => setDescription(e.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        className={utilStyle.margin}\r\n                        id=\"maxVol\"\r\n                        label=\"How many volunteers are needed?\"\r\n\r\n                        value={maxVol}\r\n                        onInput={e => setMaxVol(e.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        className={utilStyle.margin}\r\n                        id=\"location\"\r\n                        label=\"Location?\"\r\n                        value={locationInput}\r\n                        onInput={e => setLocationInput(e.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        className={utilStyle.button}\r\n                        onClick={() => { handleSubmit() }}>Submit</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                     <img className={utilStyle.image} src=\"/images/help.png\"></img>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}