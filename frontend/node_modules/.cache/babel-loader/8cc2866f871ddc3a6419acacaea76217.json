{"ast":null,"code":"var _jsxFileName = \"/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/coordinatorpage/coordinatorpage.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport TaskCard from './coordinatortasklist';\nimport Grid from '@material-ui/core/Grid';\nimport Appbar from \"../appbar/appbar.js\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAreas } from '../../redux/actions';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\nexport default function CoordinatorPage(props) {\n  const location = useLocation();\n  const [tasks, setTasks] = useState([]);\n  const [selected, setSelected] = useState({});\n  let idTrack = useRef(null);\n  const style = {\n    margin: 0,\n    top: 'auto',\n    right: 20,\n    bottom: 20,\n    left: 'auto',\n    position: 'fixed',\n    backgroundColor: '#005424'\n  };\n  const fabStyle = {\n    right: 20,\n    position: 'fixed'\n  };\n  useEffect(() => {\n    if (props.areas && props.areas.length > 0) {\n      let index = location.state | 0;\n      setTasks(props.areas[index].tasks);\n    }\n  }, [props.areas]);\n  useEffect(() => {\n    if (tasks && tasks.length > 0 && Object.values(selected).length === 0) {\n      let taskObj = {};\n      tasks.forEach(task => taskObj[task.id] = false);\n      setSelected(taskObj);\n    }\n  }, [tasks, selected]); //TODO: CALL API TO GET TASKS WITHIN THAT USER\n\n  const taskAdded = [{\n    id: \"4\",\n    name: \"Feed the Homeless 2.0\",\n    location: \"Downtown Orlando 2.0\",\n    miles: \"2.6 miles\",\n    description: \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed. 2.0\",\n    numVol: \"2\",\n    maxVol: \"2\",\n    done: \"false\"\n  }, {\n    id: \"5\",\n    name: \"Feed the Homeless 3.0\",\n    location: \"Downtown Orlando 3.0\",\n    miles: \"3.6 miles\",\n    description: \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed. 3.0\",\n    numVol: \"3\",\n    maxVol: \"4\",\n    done: \"false\"\n  }];\n\n  const handleSelect = id => {\n    let newSelected = { ...selected\n    };\n\n    if (idTrack.current === null) {\n      idTrack.current = id;\n    }\n\n    if (selected[id]) {\n      // We are leaving the task\n      //Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: id, action: \"Leaving\"}}));\n      newSelected[id] = false;\n      setSelected(newSelected);\n    } else {\n      // We are joining the task\n      if (idTrack.current !== id) {//Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: idTrack.current, action: \"Leaving\"}}));\n      } //Socket.send(JSON.stringify({topic: \"task\", action: \"join\", message: {id: id, action: \"Joining\"}}));\n\n\n      for (const prop in newSelected) {\n        newSelected[prop] = false;\n      }\n\n      newSelected[id] = true;\n      setSelected(newSelected);\n    }\n\n    idTrack.current = id;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Appbar, {\n    title: \"Coordinator's Task Created\",\n    type: \"coordinator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2 // columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n    // justify=\"space-between\"\n    // spacing={{ xs: 2, md:  }}\n    ,\n    columns: {\n      xs: 4,\n      sm: 8,\n      md: 12\n    },\n    justifyContent: \"space-evenly\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, taskAdded.map((task, index) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: \"Task\" + task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TaskCard, {\n    selected: selected[task.id],\n    handleSelected: handleSelect,\n    id: task.id,\n    task: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Fab, {\n    style: style,\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/coordinatorpage/coordinatorpage.js"],"names":["React","useState","useRef","useEffect","TaskCard","Grid","Appbar","useLocation","connect","setAreas","Fab","AddIcon","CoordinatorPage","props","location","tasks","setTasks","selected","setSelected","idTrack","style","margin","top","right","bottom","left","position","backgroundColor","fabStyle","areas","length","index","state","Object","values","taskObj","forEach","task","id","taskAdded","name","miles","description","numVol","maxVol","done","handleSelect","newSelected","current","prop","xs","sm","md","map"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\"\nimport TaskCard from './coordinatortasklist'\nimport Grid from '@material-ui/core/Grid';\nimport Appbar from \"../appbar/appbar.js\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAreas } from '../../redux/actions';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\n\n\nexport default function CoordinatorPage(props) {\n    const location = useLocation();\n    const [tasks, setTasks] = useState([]);\n    const [selected, setSelected] = useState({});\n    let idTrack = useRef(null);\n\n    const style = {\n        margin: 0,\n        top: 'auto',\n        right: 20,\n        bottom: 20,\n        left: 'auto',\n        position: 'fixed',\n        backgroundColor: '#005424',\n    };\n    const fabStyle = {\n        right: 20,\n        position: 'fixed'\n    };\n\n  useEffect(() => {\n    if (props.areas && props.areas.length > 0) {\n      let index = location.state | 0;\n      setTasks(props.areas[index].tasks);\n    }\n  }, [props.areas])\n\n  useEffect(() => {\n    if (tasks && tasks.length > 0 && Object.values(selected).length === 0) {\n      let taskObj = {};\n      tasks.forEach((task) => taskObj[task.id] = false);\n      setSelected(taskObj);\n    }\n  }, [tasks, selected])\n\n\n  //TODO: CALL API TO GET TASKS WITHIN THAT USER\n  const taskAdded = [\n    {\n      id: \"4\",\n      name: \"Feed the Homeless 2.0\",\n      location: \"Downtown Orlando 2.0\",\n      miles:\"2.6 miles\",\n      description: \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed. 2.0\",\n      numVol: \"2\",\n      maxVol: \"2\",\n      done: \"false\"\n    },\n    {\n      id: \"5\",\n      name: \"Feed the Homeless 3.0\",\n      location: \"Downtown Orlando 3.0\",\n      miles:\"3.6 miles\",\n      description: \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed. 3.0\",\n      numVol: \"3\",\n      maxVol: \"4\",\n      done: \"false\"\n    }\n  ]\n\n  const handleSelect = (id) => {\n    let newSelected = { ...selected };\n    if (idTrack.current === null) {\n      idTrack.current = id;\n    } \n    if (selected[id]) {\n      // We are leaving the task\n      //Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: id, action: \"Leaving\"}}));\n      newSelected[id] = false;\n      setSelected(newSelected);\n    } else {\n      // We are joining the task\n      if (idTrack.current !== id) {\n        //Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: idTrack.current, action: \"Leaving\"}}));\n      }\n      //Socket.send(JSON.stringify({topic: \"task\", action: \"join\", message: {id: id, action: \"Joining\"}}));\n      for (const prop in newSelected) {\n        newSelected[prop] = false;\n      }\n      newSelected[id] = true;\n      setSelected(newSelected);\n    }\n    idTrack.current = id;\n  }\n\n    return (\n        <div>\n            <Appbar title=\"Coordinator's Task Created\" type=\"coordinator\"/>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={2}\n                // columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                // justify=\"space-between\"\n                // spacing={{ xs: 2, md:  }}\n                columns={{ xs: 4, sm: 8, md: 12 }}\n                justifyContent=\"space-evenly\"\n                alignItems=\"flex-start\"\n            >\n                {taskAdded.map((task, index) =>\n                <Grid item key={\"Task\"+task.id}>\n                    <TaskCard selected={selected[task.id]} handleSelected={handleSelect} id={task.id} task={task}/>\n                </Grid>\n                )}\n            \n            </Grid >\n            <Fab style={style} color=\"primary\" aria-label=\"add\">\n                <AddIcon />\n            </Fab>\n        </div>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}