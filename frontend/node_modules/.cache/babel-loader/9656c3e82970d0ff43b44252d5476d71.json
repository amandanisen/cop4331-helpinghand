{"ast":null,"code":"var _jsxFileName = \"/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/taskform/taskform.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport DateAndTimePickers from '../datePicker/datePicker.js';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from \"react-router-dom\";\nimport Appbar from \"../appbar/appbar.js\";\nconst utilStyles = makeStyles(theme => ({\n  fields: {\n    '& > *': {\n      background: \"#F1F1F1\",\n      marginTop: '20px',\n      marginBottom: '20px',\n      // backgroundColor: \"#F1F1F1\",\n      opacity: \"0.90\" // color: \"#263238\",\n\n    }\n  },\n  date: {\n    marginTop: '20px'\n  },\n  margin: {\n    marginTop: '10px',\n    marginBottom: '10px',\n    width: '20ch',\n    background: \"#F1F1F1\",\n    opacity: \"0.90\"\n  },\n  title: {\n    marginTop: '40px'\n  },\n  button: {\n    marginTop: '40px',\n    backgroundColor: \"#27AE60\"\n  },\n  image: {\n    marginTop: '70px',\n    height: '300px',\n    width: '382px',\n    alignSelf: 'center'\n  }\n}));\nexport default function EventRegistrationForm() {\n  const utilStyle = utilStyles();\n  const [description, setDescription] = useState(''); // '' is the initial state value\n\n  const [taskInput, setTaskInput] = useState(''); // '' is the initial state value\n\n  const [locationInput, setLocationInput] = useState(''); // '' is the initial state value\n\n  const [maxVol, setMaxVol] = useState(''); // '' is the initial state value\n\n  let res;\n  let history = useHistory();\n\n  function handleSubmit() {\n    axios.post('/task', {\n      name: taskInput,\n      description: description,\n      volunteer_limit: maxVol,\n      task_location: locationInput,\n      area_id: 1\n    }).then(function (response) {\n      console.log(response);\n      history.push(\"/volunteerPage\");\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Appbar, {\n    title: \"Create New Task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.root,\n    item: true,\n    xs: 12,\n    sm: 8,\n    md: 5,\n    component: Paper,\n    elevation: 6,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.navbuttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(animated.button, {\n    onClick: loginClicked,\n    id: \"loginBtn\",\n    style: loginBtnProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(animated.button, {\n    onClick: registerClicked,\n    id: \"registerBtn\",\n    style: registerBtnProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      my: 8,\n      mx: 4,\n      width: \"400px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.tabPanel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.image,\n    src: \"/images/Logo.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 27\n    }\n  })), roleShown ? getLogin() : getRegister())))); // <>\n  //     <Appbar title=\"New Task Form\" />\n  //     <Grid\n  //         container\n  //         direction=\"column\"\n  //         justify=\"center\"\n  //         alignItems=\"center\"\n  //     >\n  //         {/* <Grid item>\n  //             <p className={utilStyle.title}\n  //             >New Task</p>\n  //         </Grid> */}\n  //         <Grid item className={utilStyle.title}>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 value={taskInput}\n  //                 onInput={e => setTaskInput(e.target.value)}\n  //                 id=\"Task-name\"\n  //                 label=\"Task name?\"\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"description\"\n  //                 label=\"Description?\"\n  //                 value={description}\n  //                 onInput={e => setDescription(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"maxVol\"\n  //                 label=\"How many volunteers are needed?\"\n  //                 value={maxVol}\n  //                 onInput={e => setMaxVol(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"location\"\n  //                 label=\"Location?\"\n  //                 value={locationInput}\n  //                 onInput={e => setLocationInput(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <Button\n  //                 className={utilStyle.button}\n  //                 onClick={() => { handleSubmit() }}>Submit</Button>\n  //         </Grid>\n  //         <Grid item>\n  //              <img className={utilStyle.image} src=\"/images/help.png\"></img>\n  //         </Grid>\n  //     </Grid>\n  // </>\n  // );\n}","map":{"version":3,"sources":["/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/taskform/taskform.js"],"names":["React","makeStyles","TextField","AccountCircle","DateAndTimePickers","InputAdornment","Button","axios","useState","Grid","useHistory","Appbar","utilStyles","theme","fields","background","marginTop","marginBottom","opacity","date","margin","width","title","button","backgroundColor","image","height","alignSelf","EventRegistrationForm","utilStyle","description","setDescription","taskInput","setTaskInput","locationInput","setLocationInput","maxVol","setMaxVol","res","history","handleSubmit","post","name","volunteer_limit","task_location","area_id","then","response","console","log","push","catch","error","classes","root","Paper","navbuttons","loginClicked","loginBtnProps","registerClicked","registerBtnProps","my","mx","display","flexDirection","alignItems","tabPanel","roleShown","getLogin","getRegister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport DateAndTimePickers from '../datePicker/datePicker.js'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\"\nimport { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from \"react-router-dom\";\nimport Appbar from \"../appbar/appbar.js\"\n\n\nconst utilStyles = makeStyles((theme) => ({\n    fields: {\n        '& > *': {\n\n            background: \"#F1F1F1\",\n            marginTop: '20px',\n            marginBottom: '20px',\n            // backgroundColor: \"#F1F1F1\",\n            opacity: \"0.90\",\n\n            // color: \"#263238\",\n        },\n    },\n    date: {\n        marginTop: '20px',\n    },\n    margin: {\n        marginTop: '10px',\n        marginBottom: '10px',\n        width: '20ch',\n        background: \"#F1F1F1\",\n        opacity: \"0.90\",\n    \n    },\n    title: {\n        marginTop: '40px',\n    },\n    button: {\n        marginTop: '40px',\n        backgroundColor: \"#27AE60\",\n\n    },\n    image: {\n        marginTop: '70px',\n        height: '300px',\n        width: '382px',\n        alignSelf: 'center',\n    \n      },\n}));\n\n\nexport default function EventRegistrationForm() {\n    const utilStyle = utilStyles();\n    const [description, setDescription] = useState(''); // '' is the initial state value\n    const [taskInput, setTaskInput] = useState(''); // '' is the initial state value\n    const [locationInput, setLocationInput] = useState(''); // '' is the initial state value\n    const [maxVol, setMaxVol] = useState(''); // '' is the initial state value\n    let res;\n    let history = useHistory();\n\n    function handleSubmit() {\n        axios.post('/task', {\n            name: taskInput,\n            description: description,\n            volunteer_limit: maxVol,\n            task_location: locationInput,\n            area_id: 1\n        })\n            .then(function (response) {\n                console.log(response);\n                history.push(\"/volunteerPage\");\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    return (           \n         <>\n              <Appbar title={\"Create New Task\"} />\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                  <Grid\n                    className={classes.root}\n                    item\n                    xs={12}\n                    sm={8}\n                    md={5}\n                    component={Paper}\n                    elevation={6}\n                    square\n                  >\n        \n        \n        <div className={classes.navbuttons}>\n                <animated.button\n                  onClick={loginClicked}\n                  id=\"loginBtn\"\n                  style={loginBtnProps}\n                >\n                  Login\n                </animated.button>\n                <animated.button\n                  onClick={registerClicked}\n                  id=\"registerBtn\"\n                  style={registerBtnProps}\n                >\n                  Register\n                </animated.button>\n              </div>\n                    <Box\n                      sx={{\n                        my: 8,\n                        mx: 4,\n                        width: \"400px\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                      }}\n                    >   \n                    \n                    <Grid item className={classes.tabPanel}>\n                          <img className={classes.image} src=\"/images/Logo.png\"></img>\n                        </Grid>\n                        {roleShown? getLogin() : getRegister()}\n        \n                    </Box>\n                  </Grid>\n                </Grid>\n              \n            </>\n          );\n        // <>\n        //     <Appbar title=\"New Task Form\" />\n        //     <Grid\n        //         container\n        //         direction=\"column\"\n        //         justify=\"center\"\n        //         alignItems=\"center\"\n        //     >\n        //         {/* <Grid item>\n        //             <p className={utilStyle.title}\n        //             >New Task</p>\n        //         </Grid> */}\n        //         <Grid item className={utilStyle.title}>\n        //             <TextField\n        //                 className={utilStyle.margin}\n        //                 value={taskInput}\n        //                 onInput={e => setTaskInput(e.target.value)}\n        //                 id=\"Task-name\"\n        //                 label=\"Task name?\"\n        //             />\n        //         </Grid>\n        //         <Grid item>\n        //             <TextField\n        //                 className={utilStyle.margin}\n        //                 id=\"description\"\n        //                 label=\"Description?\"\n        //                 value={description}\n        //                 onInput={e => setDescription(e.target.value)}\n        //             />\n        //         </Grid>\n        //         <Grid item>\n        //             <TextField\n        //                 className={utilStyle.margin}\n        //                 id=\"maxVol\"\n        //                 label=\"How many volunteers are needed?\"\n\n        //                 value={maxVol}\n        //                 onInput={e => setMaxVol(e.target.value)}\n        //             />\n        //         </Grid>\n        //         <Grid item>\n        //             <TextField\n        //                 className={utilStyle.margin}\n        //                 id=\"location\"\n        //                 label=\"Location?\"\n        //                 value={locationInput}\n        //                 onInput={e => setLocationInput(e.target.value)}\n        //             />\n        //         </Grid>\n        //         <Grid item>\n        //             <Button\n        //                 className={utilStyle.button}\n        //                 onClick={() => { handleSubmit() }}>Submit</Button>\n        //         </Grid>\n        //         <Grid item>\n        //              <img className={utilStyle.image} src=\"/images/help.png\"></img>\n        //         </Grid>\n        //     </Grid>\n        // </>\n       \n    // );\n\n}\n\n"]},"metadata":{},"sourceType":"module"}