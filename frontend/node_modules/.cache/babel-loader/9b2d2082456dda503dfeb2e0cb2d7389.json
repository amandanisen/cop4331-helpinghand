{"ast":null,"code":"var _jsxFileName = \"/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/taskform/taskform.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport DateAndTimePickers from '../datePicker/datePicker.js';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from \"react-router-dom\";\nimport Appbar from \"../appbar/appbar.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nconst utilStyles = makeStyles(theme => ({\n  fields: {\n    '& > *': {\n      background: \"#F1F1F1\",\n      marginTop: '20px',\n      marginBottom: '20px',\n      // backgroundColor: \"#F1F1F1\",\n      opacity: \"0.90\" // color: \"#263238\",\n\n    }\n  },\n  date: {\n    marginTop: '20px'\n  },\n  margin: {\n    marginTop: '10px',\n    marginBottom: '10px',\n    width: '20ch',\n    background: \"#F1F1F1\",\n    opacity: \"0.90\"\n  },\n  title: {\n    marginTop: '40px'\n  },\n  button: {\n    marginTop: '40px',\n    backgroundColor: \"#27AE60\"\n  },\n  image: {\n    marginTop: '70px',\n    height: '300px',\n    width: '382px',\n    alignSelf: 'center'\n  }\n}));\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 40\n  },\n  radio1: {\n    width: \"110px\",\n    marginBottom: 20,\n    marginLeft: 0\n  },\n  radio2: {\n    width: \"110px\",\n    marginLeft: 5\n  },\n  radio3: {\n    width: \"110px\",\n    marginTop: 20,\n    marginLeft: 0,\n    marginBottom: 20\n  },\n  image: {\n    marginTop: \"5px\",\n    height: \"100px\",\n    justifySelf: \"center\"\n  },\n  button: {\n    marginTop: \"40px\",\n    width: \"110px\",\n    height: \"40px\",\n    backgroundColor: \"#27AE60\",\n    color: \"#FFFFFF\"\n  },\n  buttonColor: {\n    backgroundColor: \"#27AE60\",\n    color: \"#FFFFFF\"\n  },\n  tab: {\n    fullWidth: true,\n    textAlign: \"center\"\n  },\n  tabPanel: {\n    textAlign: \"center\"\n  },\n  navbuttons: {\n    width: \"100%\",\n    textAlign: \"center\"\n  }\n}));\nexport default function EventRegistrationForm() {\n  const utilStyle = utilStyles();\n  const classes = useStyles();\n  const [description, setDescription] = useState(''); // '' is the initial state value\n\n  const [title, setTitle] = useState(''); // '' is the initial state value\n\n  const [locationInput, setLocationInput] = useState(''); // '' is the initial state value\n\n  const [maxVol, setMaxVol] = useState(''); // '' is the initial state value\n\n  let res;\n  let history = useHistory();\n\n  function handleSubmit() {\n    axios.post('/task', {\n      name: title,\n      description: description,\n      volunteer_limit: maxVol,\n      task_location: locationInput,\n      area_id: 1\n    }).then(function (response) {\n      console.log(response);\n      history.push(\"/volunteerPage\");\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Appbar, {\n    title: \"Create New Task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.root,\n    item: true,\n    xs: 12,\n    sm: 8,\n    md: 5,\n    component: Paper,\n    elevation: 6,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      my: 8,\n      mx: 4,\n      width: \"400px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    sx: {\n      my: 0,\n      mx: 0,\n      width: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"title\",\n    label: \"Title\",\n    name: \"title\",\n    autoComplete: \"title\",\n    autoFocus: true,\n    onChange: event => setTitle(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    marginBottom: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    onChange: event => setPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginTop: \"22px\",\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, \"Role:\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"Role\",\n    defaultValue: \"Volunteer\",\n    name: \"role-buttons-group\",\n    label: \"test\",\n    style: {\n      flexDirection: \"row\",\n      marginTop: \"15px\",\n      marginBottom: \"15px\",\n      color: \"#808080\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"Volunteer\",\n    control: /*#__PURE__*/React.createElement(BpRadio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 38\n      }\n    }),\n    label: \"Volunteer\",\n    onChange: event => setRole(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"Coordinator\",\n    control: /*#__PURE__*/React.createElement(BpRadio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 38\n      }\n    }),\n    label: \"Coordinator\",\n    onChange: event => setRole(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonColor,\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    sx: {\n      mt: 3,\n      mb: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, \"Create\")))))); // <>\n  //     <Appbar title=\"New Task Form\" />\n  //     <Grid\n  //         container\n  //         direction=\"column\"\n  //         justify=\"center\"\n  //         alignItems=\"center\"\n  //     >\n  //         {/* <Grid item>\n  //             <p className={utilStyle.title}\n  //             >New Task</p>\n  //         </Grid> */}\n  //         <Grid item className={utilStyle.title}>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 value={taskInput}\n  //                 onInput={e => setTaskInput(e.target.value)}\n  //                 id=\"Task-name\"\n  //                 label=\"Task name?\"\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"description\"\n  //                 label=\"Description?\"\n  //                 value={description}\n  //                 onInput={e => setDescription(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"maxVol\"\n  //                 label=\"How many volunteers are needed?\"\n  //                 value={maxVol}\n  //                 onInput={e => setMaxVol(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"location\"\n  //                 label=\"Location?\"\n  //                 value={locationInput}\n  //                 onInput={e => setLocationInput(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <Button\n  //                 className={utilStyle.button}\n  //                 onClick={() => { handleSubmit() }}>Submit</Button>\n  //         </Grid>\n  //         <Grid item>\n  //              <img className={utilStyle.image} src=\"/images/help.png\"></img>\n  //         </Grid>\n  //     </Grid>\n  // </>\n  // );\n}","map":{"version":3,"sources":["/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/taskform/taskform.js"],"names":["React","makeStyles","TextField","AccountCircle","DateAndTimePickers","InputAdornment","Button","axios","useState","Grid","useHistory","Appbar","Paper","Box","utilStyles","theme","fields","background","marginTop","marginBottom","opacity","date","margin","width","title","button","backgroundColor","image","height","alignSelf","useStyles","root","radio1","marginLeft","radio2","radio3","justifySelf","color","buttonColor","tab","fullWidth","textAlign","tabPanel","navbuttons","EventRegistrationForm","utilStyle","classes","description","setDescription","setTitle","locationInput","setLocationInput","maxVol","setMaxVol","res","history","handleSubmit","post","name","volunteer_limit","task_location","area_id","then","response","console","log","push","catch","error","my","mx","display","flexDirection","alignItems","event","target","value","setPassword","marginRight","setRole","mt","mb"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport DateAndTimePickers from '../datePicker/datePicker.js'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\"\nimport { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from \"react-router-dom\";\nimport Appbar from \"../appbar/appbar.js\"\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\n\nconst utilStyles = makeStyles((theme) => ({\n    fields: {\n        '& > *': {\n\n            background: \"#F1F1F1\",\n            marginTop: '20px',\n            marginBottom: '20px',\n            // backgroundColor: \"#F1F1F1\",\n            opacity: \"0.90\",\n\n            // color: \"#263238\",\n        },\n    },\n    date: {\n        marginTop: '20px',\n    },\n    margin: {\n        marginTop: '10px',\n        marginBottom: '10px',\n        width: '20ch',\n        background: \"#F1F1F1\",\n        opacity: \"0.90\",\n    \n    },\n    title: {\n        marginTop: '40px',\n    },\n    button: {\n        marginTop: '40px',\n        backgroundColor: \"#27AE60\",\n\n    },\n    image: {\n        marginTop: '70px',\n        height: '300px',\n        width: '382px',\n        alignSelf: 'center',\n    \n      },\n}));\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      marginTop: 40,\n    },\n    radio1: {\n      width: \"110px\",\n      marginBottom: 20,\n      marginLeft: 0,\n    },\n    radio2: {\n      width: \"110px\",\n      marginLeft: 5,\n    },\n    radio3: {\n      width: \"110px\",\n      marginTop: 20,\n      marginLeft: 0,\n      marginBottom: 20,\n    },\n    image: {\n      marginTop: \"5px\",\n      height: \"100px\",\n      justifySelf: \"center\",\n    },\n    button: {\n      marginTop: \"40px\",\n      width: \"110px\",\n      height: \"40px\",\n      backgroundColor: \"#27AE60\",\n      color: \"#FFFFFF\",\n    },\n    buttonColor: {\n      backgroundColor: \"#27AE60\",\n      color: \"#FFFFFF\",\n    },\n    tab: {\n      fullWidth: true,\n      textAlign: \"center\",\n    },\n    tabPanel: {\n      textAlign: \"center\",\n    },\n    navbuttons: {\n      width: \"100%\",\n      textAlign: \"center\",      \n    }\n    \n  }));\n\nexport default function EventRegistrationForm() {\n    const utilStyle = utilStyles();\n    const classes = useStyles();\n\n    const [description, setDescription] = useState(''); // '' is the initial state value\n    const [title, setTitle] = useState(''); // '' is the initial state value\n    const [locationInput, setLocationInput] = useState(''); // '' is the initial state value\n    const [maxVol, setMaxVol] = useState(''); // '' is the initial state value\n    let res;\n    let history = useHistory();\n\n    function handleSubmit() {\n        axios.post('/task', {\n            name: title,\n            description: description,\n            volunteer_limit: maxVol,\n            task_location: locationInput,\n            area_id: 1\n        })\n            .then(function (response) {\n                console.log(response);\n                history.push(\"/volunteerPage\");\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    return (           \n         <>\n              <Appbar title={\"Create New Task\"} />\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                  <Grid\n                    className={classes.root}\n                    item\n                    xs={12}\n                    sm={8}\n                    md={5}\n                    component={Paper}\n                    elevation={6}\n                    square\n                  >\n        \n                    <Box\n                      sx={{\n                        my: 8,\n                        mx: 4,\n                        width: \"400px\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                      }}\n                    >   \n                        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{my: 0,\n                        mx: 0,\n                        width: \"400px\",}}>\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"title\"\n                            label=\"Title\"\n                            name=\"title\"\n                            autoComplete=\"title\"\n                            autoFocus\n                            onChange={(event) => setTitle(event.target.value)}\n                        />\n                        <TextField\n                            marginBottom=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={(event) => setPassword(event.target.value)}\n                        />\n                \n                <Grid container>\n                        <Grid item  style={{\n                            marginTop: \"22px\",\n                            marginRight: \"10px\"\n                        }}>\n                            Role: \n                        </Grid>\n                        <Grid item>\n                        <RadioGroup\n                        aria-label=\"Role\"\n                        defaultValue=\"Volunteer\"\n                        name=\"role-buttons-group\"\n                        label =\"test\"\n                        \n                        style={{\n                            flexDirection: \"row\",\n                            marginTop: \"15px\",\n                            marginBottom: \"15px\",\n                            color: \"#808080\",\n                        }}\n                        >\n                        <FormControlLabel\n                            value=\"Volunteer\"\n                            control={<BpRadio />}\n                            label=\"Volunteer\"\n                            onChange={(event) => setRole(event.target.value)}\n                        />\n                        <FormControlLabel\n                            value=\"Coordinator\"\n                            control={<BpRadio />}\n                            label=\"Coordinator\"\n                            onChange={(event) => setRole(event.target.value)}\n                        />\n                        </RadioGroup> \n\n                        </Grid>\n                        </Grid>\n                    \n                        <Button\n                        className={classes.buttonColor}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        >\n                        Create\n                        </Button>\n                    </Box>        \n                    </Box>\n                  </Grid>\n                </Grid>\n              \n            </>\n          );\n        // <>\n        //     <Appbar title=\"New Task Form\" />\n        //     <Grid\n        //         container\n        //         direction=\"column\"\n        //         justify=\"center\"\n        //         alignItems=\"center\"\n        //     >\n        //         {/* <Grid item>\n        //             <p className={utilStyle.title}\n        //             >New Task</p>\n        //         </Grid> */}\n        //         <Grid item className={utilStyle.title}>\n        //             <TextField\n        //                 className={utilStyle.margin}\n        //                 value={taskInput}\n        //                 onInput={e => setTaskInput(e.target.value)}\n        //                 id=\"Task-name\"\n        //                 label=\"Task name?\"\n        //             />\n        //         </Grid>\n        //         <Grid item>\n        //             <TextField\n        //                 className={utilStyle.margin}\n        //                 id=\"description\"\n        //                 label=\"Description?\"\n        //                 value={description}\n        //                 onInput={e => setDescription(e.target.value)}\n        //             />\n        //         </Grid>\n        //         <Grid item>\n        //             <TextField\n        //                 className={utilStyle.margin}\n        //                 id=\"maxVol\"\n        //                 label=\"How many volunteers are needed?\"\n\n        //                 value={maxVol}\n        //                 onInput={e => setMaxVol(e.target.value)}\n        //             />\n        //         </Grid>\n        //         <Grid item>\n        //             <TextField\n        //                 className={utilStyle.margin}\n        //                 id=\"location\"\n        //                 label=\"Location?\"\n        //                 value={locationInput}\n        //                 onInput={e => setLocationInput(e.target.value)}\n        //             />\n        //         </Grid>\n        //         <Grid item>\n        //             <Button\n        //                 className={utilStyle.button}\n        //                 onClick={() => { handleSubmit() }}>Submit</Button>\n        //         </Grid>\n        //         <Grid item>\n        //              <img className={utilStyle.image} src=\"/images/help.png\"></img>\n        //         </Grid>\n        //     </Grid>\n        // </>\n       \n    // );\n\n}\n\n"]},"metadata":{},"sourceType":"module"}