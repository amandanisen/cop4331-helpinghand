{"ast":null,"code":"var _jsxFileName = \"/Users/amandanisenbaum/cop4331-helpinghand-desk/src/components/volunteerpage/volunteerpage.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport TaskCard from '../taskcard/taskcard.js';\nimport Grid from '@material-ui/core/Grid';\nimport Appbar from \"../appbar/appbar.js\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAreas } from '../../redux/actions';\n\nfunction VolunteerPage(props) {\n  console.log(\"Props test: \", props);\n  console.log(\"Props task: \", props.area_index);\n  const location = useLocation();\n  const [tasks, setTasks] = useState([]);\n  const [selected, setSelected] = useState({});\n  let idTrack = useRef(null);\n  useEffect(() => {\n    if (props.areas && props.areas.length > 0) {\n      let index = location.state | 0;\n      setTasks(props.areas[index].tasks);\n    }\n  }, [props.areas]);\n  useEffect(() => {\n    if (tasks && tasks.length > 0 && Object.values(selected).length === 0) {\n      let taskObj = {};\n      tasks.forEach(task => taskObj[task.id] = false);\n      setSelected(taskObj);\n    }\n  }, [tasks, selected]);\n\n  const handleSelect = id => {\n    let newSelected = { ...selected\n    };\n\n    if (idTrack.current === null) {\n      idTrack.current = id;\n    }\n\n    if (selected[id]) {\n      // We are leaving the task\n      //Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: id, action: \"Leaving\"}}));\n      newSelected[id] = false;\n      setSelected(newSelected);\n    } else {\n      // We are joining the task\n      if (idTrack.current !== id) {//Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: idTrack.current, action: \"Leaving\"}}));\n      } //Socket.send(JSON.stringify({topic: \"task\", action: \"join\", message: {id: id, action: \"Joining\"}}));\n\n\n      for (const prop in newSelected) {\n        newSelected[prop] = false;\n      }\n\n      newSelected[id] = true;\n      setSelected(newSelected);\n    }\n\n    idTrack.current = id;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Appbar, {\n    title: \"Volunteer's Tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: \"Task\" + task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TaskCard, {\n    selected: selected[task.id],\n    handleSelected: handleSelect,\n    id: task.id,\n    task: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })))));\n}\n\nconst mapStateToProps = state => {\n  console.log(\"state:\", state);\n  return {\n    areas: state.areas\n  };\n};\n\nconst mapDispatchToProps = {\n  areaAction: setAreas\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(VolunteerPage);","map":{"version":3,"sources":["/Users/amandanisenbaum/cop4331-helpinghand-desk/src/components/volunteerpage/volunteerpage.js"],"names":["React","useState","useRef","useEffect","TaskCard","Grid","Appbar","useLocation","connect","setAreas","VolunteerPage","props","console","log","area_index","location","tasks","setTasks","selected","setSelected","idTrack","areas","length","index","state","Object","values","taskObj","forEach","task","id","handleSelect","newSelected","current","prop","map","mapStateToProps","mapDispatchToProps","areaAction"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\"\nimport TaskCard from '../taskcard/taskcard.js'\nimport Grid from '@material-ui/core/Grid';\nimport Appbar from \"../appbar/appbar.js\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAreas } from '../../redux/actions';\n\nfunction VolunteerPage(props) {\n\n  console.log(\"Props test: \", props);\n  console.log(\"Props task: \", props.area_index);\n\n  const location = useLocation();\n  const [tasks, setTasks] = useState([]);\n  const [selected, setSelected] = useState({});\n  let idTrack = useRef(null);\n\n\n  useEffect(() => {\n    if (props.areas && props.areas.length > 0) {\n      let index = location.state | 0;\n      setTasks(props.areas[index].tasks);\n    }\n  }, [props.areas])\n\n  useEffect(() => {\n    if (tasks && tasks.length > 0 && Object.values(selected).length === 0) {\n      let taskObj = {};\n      tasks.forEach((task) => taskObj[task.id] = false);\n      setSelected(taskObj);\n    }\n  }, [tasks, selected])\n\n\n  const handleSelect = (id) => {\n    let newSelected = { ...selected };\n    if (idTrack.current === null) {\n      idTrack.current = id;\n    } \n    if (selected[id]) {\n      // We are leaving the task\n      //Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: id, action: \"Leaving\"}}));\n      newSelected[id] = false;\n      setSelected(newSelected);\n    } else {\n      // We are joining the task\n      if (idTrack.current !== id) {\n        //Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: idTrack.current, action: \"Leaving\"}}));\n      }\n      //Socket.send(JSON.stringify({topic: \"task\", action: \"join\", message: {id: id, action: \"Joining\"}}));\n      for (const prop in newSelected) {\n        newSelected[prop] = false;\n      }\n      newSelected[id] = true;\n      setSelected(newSelected);\n    }\n    idTrack.current = id;\n  }\n\n\n\n  return (\n    <div>\n      <Appbar title=\"Volunteer's Tasks\" />\n      <Grid\n          container\n          direction=\"column\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n      >\n        {tasks.map((task) =>\n          <Grid item key={\"Task\"+task.id}>\n            <TaskCard selected={selected[task.id]} handleSelected={handleSelect} id={task.id} task={task}/>\n          </Grid>\n        )}\n      </Grid >\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  console.log(\"state:\" , state);\n  return {\n    areas: state.areas\n  }\n}\n\nconst mapDispatchToProps = { areaAction: setAreas }\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(VolunteerPage)\n"]},"metadata":{},"sourceType":"module"}