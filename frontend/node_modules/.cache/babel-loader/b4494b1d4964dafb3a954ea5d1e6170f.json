{"ast":null,"code":"var _jsxFileName = \"/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/tasknearpage/tasknearpage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport AreaCard from \"../tasknearcard/tasknearcard.js\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Appbar from \"../appbar/appbar.js\";\nimport { connect } from \"react-redux\";\nimport { setAreas } from \"../../redux/actions.js\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction FindTask(props) {\n  var user_data = localStorage.getItem(\"user_data\");\n  console.log(user_data);\n  const [areas, setAreas] = useState([]);\n  let history = useHistory();\n  const areasTest = [{\n    id: \"1\",\n    name: \"Feed the Homeless\",\n    location: \"Downtown Orlando\",\n    miles: \"2.5 miles\",\n    description: \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed.\",\n    numVol: \"5\",\n    maxVol: \"8\"\n  }, {\n    id: \"2\",\n    name: \"Concert Cleanup\",\n    description: \"This is a description of concert cleanup. Need 10 participants to help clean after a concert.\",\n    location: \"Amway Center\",\n    miles: \"3 miles\",\n    numVol: \"1\",\n    maxVol: \"10\"\n  }, {\n    id: \"3\",\n    name: \"Set up Tents\",\n    description: \"This is a description of setting up tents. Need 6 participants.\",\n    location: \"UCF\",\n    miles: \"15 miles\",\n    numVol: \"2\",\n    maxVol: \"6\"\n  }, {\n    id: \"4\",\n    name: \"Set up Tents 2.0\",\n    description: \"This 2 is a description of setting up tents. Need 6 participants.\",\n    location: \"UCF\",\n    miles: \"15 miles\",\n    numVol: \"2\",\n    maxVol: \"6\"\n  }, {\n    id: \"5\",\n    name: \"Concert Cleanup\",\n    description: \"This is a description of concert cleanup. Need 10 participants to help clean after a concert.\",\n    location: \"Amway Center\",\n    miles: \"3 miles\",\n    numVol: \"1\",\n    maxVol: \"10\"\n  }, {\n    id: \"6\",\n    name: \"Set up Tents\",\n    description: \"This is a description of setting up tents. Need 6 participants.\",\n    location: \"UCF\",\n    miles: \"15 miles\",\n    numVol: \"2\",\n    maxVol: \"6\"\n  }];\n  useEffect(() => {\n    if (props.areas) {\n      setAreas(props.areas);\n    }\n  }, props.areas);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Appbar, {\n    title: \"Volunteer Tasks Near You\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2 // columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n    // justify=\"space-between\"\n    // spacing={{ xs: 2, md:  }}\n    ,\n    columns: {\n      xs: 4,\n      sm: 8,\n      md: 12\n    },\n    justifyContent: \"space-evenly\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }\n  }, areasTest.map((area, index) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: \"area\" + area.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(AreaCard, {\n    name: area.name,\n    location: area.location,\n    numVol: area.numVol,\n    maxVol: area.maxVol,\n    description: area.description,\n    miles: area.miles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  })))));\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    areas: state.areas\n  };\n};\n\nconst mapDispatchToProps = {\n  areaAction: setAreas\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FindTask);","map":{"version":3,"sources":["/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/tasknearpage/tasknearpage.js"],"names":["React","useState","useEffect","AreaCard","Grid","Appbar","connect","setAreas","useHistory","FindTask","props","user_data","localStorage","getItem","console","log","areas","history","areasTest","id","name","location","miles","description","numVol","maxVol","xs","sm","md","map","area","index","mapStateToProps","state","mapDispatchToProps","areaAction"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AreaCard from \"../tasknearcard/tasknearcard.js\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Appbar from \"../appbar/appbar.js\";\nimport { connect } from \"react-redux\";\nimport { setAreas } from \"../../redux/actions.js\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction FindTask(props) {\n\tvar user_data = localStorage.getItem(\"user_data\");\n\tconsole.log(user_data);\n\tconst [areas, setAreas] = useState([]);\n\tlet history = useHistory();\n\tconst areasTest = [\n\t\t{\n\t\t\tid: \"1\",\n\t\t\tname: \"Feed the Homeless\",\n\t\t\tlocation: \"Downtown Orlando\",\n\t\t\tmiles: \"2.5 miles\",\n\t\t\tdescription:\n\t\t\t\t\"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed.\",\n\t\t\tnumVol: \"5\",\n\t\t\tmaxVol: \"8\",\n\t\t},\n\t\t{\n\t\t\tid: \"2\",\n\t\t\tname: \"Concert Cleanup\",\n\t\t\tdescription:\n\t\t\t\t\"This is a description of concert cleanup. Need 10 participants to help clean after a concert.\",\n\t\t\tlocation: \"Amway Center\",\n\t\t\tmiles: \"3 miles\",\n\t\t\tnumVol: \"1\",\n\t\t\tmaxVol: \"10\",\n\t\t},\n\t\t{\n\t\t\tid: \"3\",\n\t\t\tname: \"Set up Tents\",\n\t\t\tdescription:\n\t\t\t\t\"This is a description of setting up tents. Need 6 participants.\",\n\t\t\tlocation: \"UCF\",\n\t\t\tmiles: \"15 miles\",\n\t\t\tnumVol: \"2\",\n\t\t\tmaxVol: \"6\",\n\t\t},\n\t\t{\n\t\t\tid: \"4\",\n\t\t\tname: \"Set up Tents 2.0\",\n\t\t\tdescription:\n\t\t\t\t\"This 2 is a description of setting up tents. Need 6 participants.\",\n\t\t\tlocation: \"UCF\",\n\t\t\tmiles: \"15 miles\",\n\t\t\tnumVol: \"2\",\n\t\t\tmaxVol: \"6\",\n\t\t},\n\t\t{\n\t\t\tid: \"5\",\n\t\t\tname: \"Concert Cleanup\",\n\t\t\tdescription:\n\t\t\t\t\"This is a description of concert cleanup. Need 10 participants to help clean after a concert.\",\n\t\t\tlocation: \"Amway Center\",\n\t\t\tmiles: \"3 miles\",\n\t\t\tnumVol: \"1\",\n\t\t\tmaxVol: \"10\",\n\t\t},\n\t\t{\n\t\t\tid: \"6\",\n\t\t\tname: \"Set up Tents\",\n\t\t\tdescription:\n\t\t\t\t\"This is a description of setting up tents. Need 6 participants.\",\n\t\t\tlocation: \"UCF\",\n\t\t\tmiles: \"15 miles\",\n\t\t\tnumVol: \"2\",\n\t\t\tmaxVol: \"6\",\n\t\t},\n\t];\n\tuseEffect(() => {\n\t\tif (props.areas) {\n\t\t\tsetAreas(props.areas);\n\t\t}\n\t}, props.areas);\n\n\treturn (\n\t\t<div>\n\t\t\t<Appbar title=\"Volunteer Tasks Near You\" />\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tdirection=\"row\"\n\t\t\t\tspacing={2}\n\t\t\t\t// columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n\t\t\t\t// justify=\"space-between\"\n\t\t\t\t// spacing={{ xs: 2, md:  }}\n\t\t\t\tcolumns={{ xs: 4, sm: 8, md: 12 }}\n\t\t\t\tjustifyContent=\"space-evenly\"\n\t\t\t\talignItems=\"flex-start\"\n\t\t\t>\n\t\t\t\t{areasTest.map((area, index) => (\n\t\t\t\t\t<Grid item key={\"area\" + area.id}>\n\t\t\t\t\t\t<AreaCard\n\t\t\t\t\t\t\tname={area.name}\n\t\t\t\t\t\t\tlocation={area.location}\n\t\t\t\t\t\t\tnumVol={area.numVol}\n\t\t\t\t\t\t\tmaxVol={area.maxVol}\n\t\t\t\t\t\t\tdescription={area.description}\n\t\t\t\t\t\t\tmiles={area.miles}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\tconsole.log(state);\n\treturn {\n\t\tareas: state.areas,\n\t};\n};\n\nconst mapDispatchToProps = { areaAction: setAreas };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FindTask);\n"]},"metadata":{},"sourceType":"module"}