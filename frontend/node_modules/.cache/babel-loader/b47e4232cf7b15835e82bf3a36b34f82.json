{"ast":null,"code":"var _jsxFileName = \"/Users/lawrenceoconnor/Documents/GitHub/cop4331-helpinghand/frontend/src/components/eventRegistration/eventRegistration.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport DateAndTimePickers from '../datePicker/datePicker.js';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from \"react-router-dom\";\nimport AppBar from '../appbar/appbar.js';\nconst utilStyles = makeStyles(theme => ({\n  fields: {\n    '& > *': {\n      background: \"#F1F1F1\",\n      marginTop: '20px',\n      marginBottom: '20px',\n      // backgroundColor: \"#F1F1F1\",\n      opacity: \"0.90\"\n    }\n  },\n  date: {\n    marginTop: '20px'\n  },\n  margin: {\n    marginTop: '10px',\n    marginBottom: '10px',\n    width: '20ch',\n    background: \"#F1F1F1\",\n    opacity: \"0.90\"\n  },\n  title: {\n    margin: '20px' // margin: '20px',\n    // fontSize: '30px',\n    // textAlign: \"center\",\n\n  },\n  button: {\n    marginTop: '40px',\n    width: '110px',\n    height: '40px',\n    backgroundColor: \"#27AE60\",\n    color: '#FFFFFF'\n  },\n  image: {\n    marginTop: '20px',\n    height: '300px',\n    width: '382px',\n    alignSelf: 'center'\n  },\n  imageBox: {\n    width: '10px',\n    height: '10px',\n    right: '100px'\n  }\n}));\nexport default function EventRegistrationForm() {\n  const utilStyle = utilStyles();\n  const [emailInput, setEmailInput] = useState(''); // '' is the initial state value\n\n  const [eventInput, setEventInput] = useState(''); // '' is the initial state value\n\n  const [locationInput, setLocationInput] = useState(''); // '' is the initial state value\n\n  const [dateInput, setDateInput] = useState(new Date()); // '' is the initial state value\n\n  const [endDateInput, setEndDateInput] = useState(new Date()); // '' is the initial state value\n\n  let res;\n  let history = useHistory();\n\n  function handleSubmit() {\n    axios.post('/event', {\n      name: eventInput,\n      location: locationInput,\n      email: emailInput,\n      start_time: dateInput,\n      end_time: endDateInput\n    }).then(function (response) {\n      console.log(response);\n      history.push(\"/eventconfirmation\", {\n        res: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    title: \"Registration Form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: utilStyle.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: utilStyle.margin,\n    value: eventInput,\n    onInput: e => setEventInput(e.target.value),\n    id: \"event-name\",\n    label: \"Event Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 8\n    }\n  }), console.log(\"Event:\", eventInput)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: utilStyle.margin,\n    id: \"email-input\",\n    label: \"Email\",\n    value: emailInput,\n    onInput: e => setEmailInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), console.log(\"Email:\", emailInput)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: utilStyle.margin,\n    id: \"location\",\n    label: \"Location\",\n    value: locationInput,\n    onInput: e => setLocationInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }), console.log(\"Location:\", locationInput)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: utilStyle.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DateAndTimePickers, {\n    id: \"start-of-event\",\n    title: \"Start\",\n    handleInputChange: setDateInput,\n    value: dateInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }), console.log(\"Date:\", dateInput)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: utilStyle.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DateAndTimePickers, {\n    id: \"end-of-event\",\n    title: \"End\",\n    handleInputChange: setEndDateInput,\n    value: endDateInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), console.log(\"Date:\", endDateInput)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: utilStyle.button,\n    onClick: () => {\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: utilStyle.image,\n    src: \"/images/recycle.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/lawrenceoconnor/Documents/GitHub/cop4331-helpinghand/frontend/src/components/eventRegistration/eventRegistration.js"],"names":["React","makeStyles","TextField","AccountCircle","DateAndTimePickers","InputAdornment","Button","axios","useState","Grid","useHistory","AppBar","utilStyles","theme","fields","background","marginTop","marginBottom","opacity","date","margin","width","title","button","height","backgroundColor","color","image","alignSelf","imageBox","right","EventRegistrationForm","utilStyle","emailInput","setEmailInput","eventInput","setEventInput","locationInput","setLocationInput","dateInput","setDateInput","Date","endDateInput","setEndDateInput","res","history","handleSubmit","post","name","location","email","start_time","end_time","then","response","console","log","push","data","catch","error","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport DateAndTimePickers from '../datePicker/datePicker.js'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport AppBar from '../appbar/appbar.js';\n\nconst utilStyles = makeStyles((theme) => ({\n  fields: {\n    '& > *': {\n\n      background: \"#F1F1F1\",\n      marginTop: '20px',\n      marginBottom: '20px',\n      // backgroundColor: \"#F1F1F1\",\n      opacity: \"0.90\",\n    },\n  },\n  date: {\n    marginTop: '20px',\n  },\n  margin: {\n    marginTop: '10px',\n    marginBottom: '10px',\n    width: '20ch',\n    background: \"#F1F1F1\",\n    opacity: \"0.90\",\n\n  },\n  title: {\n    margin: '20px',\n    // margin: '20px',\n    // fontSize: '30px',\n    // textAlign: \"center\",\n  },\n  button: {\n    marginTop: '40px',\n    width: '110px',\n    height: '40px',\n    backgroundColor: \"#27AE60\",\n    color: '#FFFFFF'\n  },\n  image: {\n    marginTop: '20px',\n    height: '300px',\n    width: '382px',\n    alignSelf: 'center',\n\n  },\n  imageBox:{\n    width: '10px',\n    height: '10px',\n    right: '100px',\n\n  }\n\n}));\n\n\nexport default function EventRegistrationForm() {\n  const utilStyle = utilStyles();\n  const [emailInput, setEmailInput] = useState(''); // '' is the initial state value\n  const [eventInput, setEventInput] = useState(''); // '' is the initial state value\n  const [locationInput, setLocationInput] = useState(''); // '' is the initial state value\n  const [dateInput, setDateInput] = useState(new Date()); // '' is the initial state value\n  const [endDateInput, setEndDateInput] = useState(new Date()); // '' is the initial state value\n  let res;\n  let history = useHistory();\n\n  function handleSubmit() {\n    axios.post('/event', {\n      name: eventInput,\n      location: locationInput,\n      email: emailInput,\n      start_time: dateInput,\n      end_time: endDateInput\n    })\n      .then(function (response) {\n        console.log(response);\n        history.push(\"/eventconfirmation\", { res: response.data });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n\n\n\n  return(\n  <Grid\n    container\n    direction=\"column\"\n    justify=\"center\"\n    alignItems=\"center\"\n  >\n    <AppBar title=\"Registration Form\" />\n\n    {/* <Grid item>\n      <p className={utilStyle.title}\n>Registration Form</p>\n    </Grid> */}\n    <Grid item className={utilStyle.title}>\n       <TextField \n            className={utilStyle.margin}\n            value={eventInput}\n            onInput={e => setEventInput(e.target.value)}\n            id=\"event-name\"\n            label=\"Event Name\"\n          />\n\n        {console.log(\"Event:\", eventInput)}\n      </Grid>\n      <Grid item>\n        <TextField\n          className={utilStyle.margin}\n\n          id=\"email-input\"\n          label=\"Email\"\n          value={emailInput}\n          onInput={e => setEmailInput(e.target.value)}\n        />\n        {console.log(\"Email:\", emailInput)}\n      </Grid>\n      <Grid item>\n        <TextField\n          className={utilStyle.margin}\n\n          id=\"location\"\n          label=\"Location\"\n          value={locationInput}\n          onInput={e => setLocationInput(e.target.value)}\n        />\n        {console.log(\"Location:\", locationInput)}\n      </Grid>\n      <Grid item className={utilStyle.date}>\n        <DateAndTimePickers\n          id=\"start-of-event\"\n          title=\"Start\"\n          handleInputChange={setDateInput}\n          value={dateInput}\n        />\n        {console.log(\"Date:\", dateInput)}\n      </Grid>\n      <Grid item className={utilStyle.date}>\n        <DateAndTimePickers\n          id=\"end-of-event\"\n          title=\"End\"\n          handleInputChange={setEndDateInput}\n          value={endDateInput}\n        />\n        {console.log(\"Date:\", endDateInput)}\n      </Grid>\n      <Grid item>\n        <Button\n          className={utilStyle.button}\n          onClick={() => { handleSubmit() }}>Submit</Button>\n      </Grid>\n      <Grid item>\n        <img className={utilStyle.image} src=\"/images/recycle.jpg\"></img>\n      </Grid>\n    </Grid>\n\n  );\n\n}\n\n"]},"metadata":{},"sourceType":"module"}