{"ast":null,"code":"var _jsxFileName = \"/Users/lawrenceoconnor/Documents/GitHub/cop4331-helpinghand/frontend/src/components/taskform/taskform.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport DateAndTimePickers from \"../datePicker/datePicker.js\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useHistory } from \"react-router-dom\";\nimport Appbar from \"../appbar/appbar.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport AutoComplete from \"react-google-autocomplete\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n\nconst buildPath = require(\"../../redux/buildPath\");\n\nconst utilStyles = makeStyles(theme => ({\n  fields: {\n    \"& > *\": {\n      background: \"#F1F1F1\",\n      marginTop: \"20px\",\n      marginBottom: \"20px\",\n      // backgroundColor: \"#F1F1F1\",\n      opacity: \"0.90\" // color: \"#263238\",\n\n    }\n  },\n  date: {\n    marginTop: \"20px\"\n  },\n  margin: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    width: \"20ch\",\n    background: \"#F1F1F1\",\n    opacity: \"0.90\"\n  },\n  title: {\n    marginTop: \"40px\"\n  },\n  button: {\n    marginTop: \"40px\",\n    backgroundColor: \"#27AE60\"\n  },\n  image: {\n    marginTop: \"70px\",\n    height: \"300px\",\n    width: \"382px\",\n    alignSelf: \"center\"\n  }\n}));\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 40\n  },\n  radio1: {\n    width: \"110px\",\n    marginBottom: 20,\n    marginLeft: 0\n  },\n  radio2: {\n    width: \"110px\",\n    marginLeft: 5\n  },\n  radio3: {\n    width: \"110px\",\n    marginTop: 20,\n    marginLeft: 0,\n    marginBottom: 20\n  },\n  image: {\n    marginTop: \"5px\",\n    height: \"100px\",\n    justifySelf: \"center\"\n  },\n  button: {\n    marginTop: \"40px\",\n    width: \"110px\",\n    height: \"40px\",\n    backgroundColor: \"#27AE60\",\n    color: \"#FFFFFF\"\n  },\n  buttonColor: {\n    backgroundColor: \"#27AE60\",\n    color: \"#FFFFFF\"\n  },\n  tab: {\n    fullWidth: true,\n    textAlign: \"center\"\n  },\n  tabPanel: {\n    textAlign: \"center\"\n  },\n  navbuttons: {\n    width: \"100%\",\n    textAlign: \"center\"\n  }\n}));\nexport default function EventRegistrationForm() {\n  const utilStyle = utilStyles();\n  const classes = useStyles();\n  const [place, setLocation] = useState(null);\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [date, setDate] = React.useState(new Date(\"2014-08-18\"));\n  const [description, setDescription] = useState(\"\"); // '' is the initial state value\n\n  const [title, setTitle] = useState(\"\"); // '' is the initial state value\n\n  const [locationInput, setLocationInput] = useState(\"\"); // '' is the initial state value\n\n  const [maxVol, setMaxVol] = useState(\"\"); // '' is the initial state value\n\n  let res;\n  let history = useHistory();\n  const [selectedDate, handleDateChange] = useState(new Date());\n  var user_data = localStorage.getItem(\"id\");\n\n  async function handleSubmit(event) {\n    // role has just been added , Api needs to add to api call console.log(role);\n    // and make the call based on the value of role\n    // register role as well i assume\n    event.preventDefault();\n\n    if (place != null) {\n      console.log(place.formatted_address);\n      var lati = place.geometry.location.lat();\n      var lng = place.geometry.location.lng();\n      console.log(lati, lng);\n    } //console.log(user_data.id);\n\n\n    var obj = {\n      name: title,\n      description: description,\n      date: selectedDate,\n      max_slots: maxVol,\n      latitude: lati,\n      longitude: lng,\n      coordID: user_data.id\n    };\n    var js = JSON.stringify(obj);\n\n    try {\n      const response = await fetch(buildPath(\"/task/create\"), {\n        method: \"POST\",\n        body: js,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      var res = JSON.parse(await response.text());\n\n      if (res.id < 0) {// setMessage(res.error);\n      } else {\n        var user = {\n          id: res.id\n        };\n        console.log(user);\n        history.push(\"/coordinatorPage\");\n      }\n    } catch (e) {\n      alert(e.toString());\n      return;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Appbar, {\n    title: \"Create New Task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.root,\n    item: true,\n    xs: 12,\n    sm: 8,\n    md: 5,\n    component: Paper,\n    elevation: 6,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      my: 8,\n      mx: 4,\n      width: \"400px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    sx: {\n      my: 0,\n      mx: 0,\n      width: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"title\",\n    label: \"Title\",\n    name: \"title\",\n    autoComplete: \"title\",\n    autoFocus: true,\n    onChange: event => setTitle(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    marginBottom: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"description\",\n    label: \"Description\",\n    type: \"description\",\n    id: \"description\",\n    onChange: event => setDescription(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    marginBottom: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"maxVol\",\n    label: \"Number of Volunteers\",\n    type: \"maxVol\",\n    id: \"maxVol\",\n    onChange: event => setMaxVol(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AutoComplete, {\n    placeholder: \"Location*\",\n    apiKey: \"AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4\",\n    required: true,\n    style: {\n      width: \"100%\",\n      fontSize: 16,\n      // height: 60,\n      marginTop: \"1.5rem\",\n      marginBottom: \"0.5rem\",\n      // backgroundColor: \"#eee\",\n      display: \"inline-block\",\n      borderBottom: \"1px solid rgb(112, 111, 111)\"\n    } //  predefinedPlacesDescription: {\n    //    color: '#1faadb',\n    //  }, }}\n    ,\n    variant: \"outlined\",\n    onPlaceSelected: place => setLocation(place),\n    options: {\n      types: [\"address\"],\n      componentRestrictions: {\n        country: \"us\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    style: {\n      marginTop: \"1.5rem\"\n    },\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    style: {\n      marginTop: \"1.5rem\"\n    },\n    autoOk: true,\n    variant: \"inline\",\n    inputVariant: \"outlined\",\n    label: \"Date of Task\",\n    format: \"MM/dd/yyyy\",\n    value: selectedDate,\n    InputAdornmentProps: {\n      position: \"start\"\n    },\n    onChange: date => handleDateChange(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonColor,\n    type: \"submit\",\n    fullWidth: true,\n    style: {\n      marginTop: \"1.5rem\"\n    },\n    variant: \"contained\",\n    sx: {\n      mt: 3,\n      mb: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, \"Create\")))))); // <>\n  //     <Appbar title=\"New Task Form\" />\n  //     <Grid\n  //         container\n  //         direction=\"column\"\n  //         justify=\"center\"\n  //         alignItems=\"center\"\n  //     >\n  //         {/* <Grid item>\n  //             <p className={utilStyle.title}\n  //             >New Task</p>\n  //         </Grid> */}\n  //         <Grid item className={utilStyle.title}>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 value={taskInput}\n  //                 onInput={e => setTaskInput(e.target.value)}\n  //                 id=\"Task-name\"\n  //                 label=\"Task name?\"\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"description\"\n  //                 label=\"Description?\"\n  //                 value={description}\n  //                 onInput={e => setDescription(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"maxVol\"\n  //                 label=\"How many volunteers are needed?\"\n  //                 value={maxVol}\n  //                 onInput={e => setMaxVol(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"location\"\n  //                 label=\"Location?\"\n  //                 value={locationInput}\n  //                 onInput={e => setLocationInput(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <Button\n  //                 className={utilStyle.button}\n  //                 onClick={() => { handleSubmit() }}>Submit</Button>\n  //         </Grid>\n  //         <Grid item>\n  //              <img className={utilStyle.image} src=\"/images/help.png\"></img>\n  //         </Grid>\n  //     </Grid>\n  // </>\n  // );\n}","map":{"version":3,"sources":["/Users/lawrenceoconnor/Documents/GitHub/cop4331-helpinghand/frontend/src/components/taskform/taskform.js"],"names":["React","makeStyles","TextField","AccountCircle","DateAndTimePickers","InputAdornment","Button","axios","useState","Grid","useHistory","Appbar","Paper","Box","AutoComplete","DateFnsUtils","KeyboardDatePicker","MuiPickersUtilsProvider","buildPath","require","utilStyles","theme","fields","background","marginTop","marginBottom","opacity","date","margin","width","title","button","backgroundColor","image","height","alignSelf","useStyles","root","radio1","marginLeft","radio2","radio3","justifySelf","color","buttonColor","tab","fullWidth","textAlign","tabPanel","navbuttons","EventRegistrationForm","utilStyle","classes","place","setLocation","lat","setLat","long","setLong","setDate","Date","description","setDescription","setTitle","locationInput","setLocationInput","maxVol","setMaxVol","res","history","selectedDate","handleDateChange","user_data","localStorage","getItem","handleSubmit","event","preventDefault","console","log","formatted_address","lati","geometry","location","lng","obj","name","max_slots","latitude","longitude","coordID","id","js","JSON","stringify","response","fetch","method","body","headers","parse","text","user","push","e","alert","toString","my","mx","display","flexDirection","alignItems","target","value","fontSize","borderBottom","types","componentRestrictions","country","position","mt","mb"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport DateAndTimePickers from \"../datePicker/datePicker.js\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useHistory } from \"react-router-dom\";\nimport Appbar from \"../appbar/appbar.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport AutoComplete from \"react-google-autocomplete\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nconst buildPath = require(\"../../redux/buildPath\");\n\nconst utilStyles = makeStyles((theme) => ({\n  fields: {\n    \"& > *\": {\n      background: \"#F1F1F1\",\n      marginTop: \"20px\",\n      marginBottom: \"20px\",\n      // backgroundColor: \"#F1F1F1\",\n      opacity: \"0.90\",\n\n      // color: \"#263238\",\n    },\n  },\n  date: {\n    marginTop: \"20px\",\n  },\n  margin: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    width: \"20ch\",\n    background: \"#F1F1F1\",\n    opacity: \"0.90\",\n  },\n  title: {\n    marginTop: \"40px\",\n  },\n  button: {\n    marginTop: \"40px\",\n    backgroundColor: \"#27AE60\",\n  },\n  image: {\n    marginTop: \"70px\",\n    height: \"300px\",\n    width: \"382px\",\n    alignSelf: \"center\",\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 40,\n  },\n  radio1: {\n    width: \"110px\",\n    marginBottom: 20,\n    marginLeft: 0,\n  },\n  radio2: {\n    width: \"110px\",\n    marginLeft: 5,\n  },\n  radio3: {\n    width: \"110px\",\n    marginTop: 20,\n    marginLeft: 0,\n    marginBottom: 20,\n  },\n  image: {\n    marginTop: \"5px\",\n    height: \"100px\",\n    justifySelf: \"center\",\n  },\n  button: {\n    marginTop: \"40px\",\n    width: \"110px\",\n    height: \"40px\",\n    backgroundColor: \"#27AE60\",\n    color: \"#FFFFFF\",\n  },\n  buttonColor: {\n    backgroundColor: \"#27AE60\",\n    color: \"#FFFFFF\",\n  },\n  tab: {\n    fullWidth: true,\n    textAlign: \"center\",\n  },\n  tabPanel: {\n    textAlign: \"center\",\n  },\n  navbuttons: {\n    width: \"100%\",\n    textAlign: \"center\",\n  },\n}));\n\nexport default function EventRegistrationForm() {\n  const utilStyle = utilStyles();\n  const classes = useStyles();\n  const [place, setLocation] = useState(null);\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [date, setDate] = React.useState(new Date(\"2014-08-18\"));\n\n  const [description, setDescription] = useState(\"\"); // '' is the initial state value\n  const [title, setTitle] = useState(\"\"); // '' is the initial state value\n  const [locationInput, setLocationInput] = useState(\"\"); // '' is the initial state value\n  const [maxVol, setMaxVol] = useState(\"\"); // '' is the initial state value\n  let res;\n  let history = useHistory();\n  const [selectedDate, handleDateChange] = useState(new Date());\n  var user_data = localStorage.getItem(\"id\");\n\n  async function handleSubmit(event) {\n    // role has just been added , Api needs to add to api call console.log(role);\n    // and make the call based on the value of role\n    // register role as well i assume\n    event.preventDefault();\n\n    if (place != null) {\n      console.log(place.formatted_address);\n      var lati = place.geometry.location.lat();\n      var lng = place.geometry.location.lng();\n      console.log(lati, lng);\n    }\n    //console.log(user_data.id);\n    var obj = {\n      name: title,\n      description: description,\n      date: selectedDate,\n      max_slots: maxVol,\n      latitude: lati,\n      longitude: lng,\n      coordID: user_data.id,\n    };\n    var js = JSON.stringify(obj);\n\n    try {\n      const response = await fetch(buildPath(\"/task/create\"), {\n        method: \"POST\",\n        body: js,\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n\n      var res = JSON.parse(await response.text());\n      if (res.id < 0) {\n        // setMessage(res.error);\n      } else {\n        var user = {\n          id: res.id,\n        };\n        console.log(user);\n\n        history.push(\"/coordinatorPage\");\n      }\n    } catch (e) {\n      alert(e.toString());\n      return;\n    }\n  }\n\n  return (\n    <>\n      <Appbar title={\"Create New Task\"} />\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid\n          className={classes.root}\n          item\n          xs={12}\n          sm={8}\n          md={5}\n          component={Paper}\n          elevation={6}\n          square\n        >\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              width: \"400px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ my: 0, mx: 0, width: \"400px\" }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"title\"\n                label=\"Title\"\n                name=\"title\"\n                autoComplete=\"title\"\n                autoFocus\n                onChange={(event) => setTitle(event.target.value)}\n              />\n              <TextField\n                marginBottom=\"normal\"\n                required\n                fullWidth\n                name=\"description\"\n                label=\"Description\"\n                type=\"description\"\n                id=\"description\"\n                onChange={(event) => setDescription(event.target.value)}\n              />\n              <TextField\n                marginBottom=\"normal\"\n                required\n                fullWidth\n                name=\"maxVol\"\n                label=\"Number of Volunteers\"\n                type=\"maxVol\"\n                id=\"maxVol\"\n                onChange={(event) => setMaxVol(event.target.value)}\n              />\n\n              <AutoComplete\n                placeholder=\"Location*\"\n                apiKey=\"AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4\"\n                required\n                style={{\n                  width: \"100%\",\n                  fontSize: 16,\n                  // height: 60,\n                  marginTop: \"1.5rem\",\n                  marginBottom: \"0.5rem\",\n                  // backgroundColor: \"#eee\",\n                  display: \"inline-block\",\n                  borderBottom: \"1px solid rgb(112, 111, 111)\",\n                }}\n                //  predefinedPlacesDescription: {\n                //    color: '#1faadb',\n                //  }, }}\n                variant=\"outlined\"\n                onPlaceSelected={(place) => setLocation(place)}\n                options={{\n                  types: [\"address\"],\n                  componentRestrictions: { country: \"us\" },\n                }}\n              />\n              <MuiPickersUtilsProvider\n                style={{ marginTop: \"1.5rem\" }}\n                utils={DateFnsUtils}\n              >\n                <KeyboardDatePicker\n                  style={{ marginTop: \"1.5rem\" }}\n                  autoOk\n                  variant=\"inline\"\n                  inputVariant=\"outlined\"\n                  label=\"Date of Task\"\n                  format=\"MM/dd/yyyy\"\n                  value={selectedDate}\n                  InputAdornmentProps={{ position: \"start\" }}\n                  onChange={(date) => handleDateChange(date)}\n                />\n              </MuiPickersUtilsProvider>\n\n              <Grid container></Grid>\n\n              <Button\n                className={classes.buttonColor}\n                type=\"submit\"\n                fullWidth\n                style={{ marginTop: \"1.5rem\" }}\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Create\n              </Button>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n  // <>\n  //     <Appbar title=\"New Task Form\" />\n  //     <Grid\n  //         container\n  //         direction=\"column\"\n  //         justify=\"center\"\n  //         alignItems=\"center\"\n  //     >\n  //         {/* <Grid item>\n  //             <p className={utilStyle.title}\n  //             >New Task</p>\n  //         </Grid> */}\n  //         <Grid item className={utilStyle.title}>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 value={taskInput}\n  //                 onInput={e => setTaskInput(e.target.value)}\n  //                 id=\"Task-name\"\n  //                 label=\"Task name?\"\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"description\"\n  //                 label=\"Description?\"\n  //                 value={description}\n  //                 onInput={e => setDescription(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"maxVol\"\n  //                 label=\"How many volunteers are needed?\"\n\n  //                 value={maxVol}\n  //                 onInput={e => setMaxVol(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <TextField\n  //                 className={utilStyle.margin}\n  //                 id=\"location\"\n  //                 label=\"Location?\"\n  //                 value={locationInput}\n  //                 onInput={e => setLocationInput(e.target.value)}\n  //             />\n  //         </Grid>\n  //         <Grid item>\n  //             <Button\n  //                 className={utilStyle.button}\n  //                 onClick={() => { handleSubmit() }}>Submit</Button>\n  //         </Grid>\n  //         <Grid item>\n  //              <img className={utilStyle.image} src=\"/images/help.png\"></img>\n  //         </Grid>\n  //     </Grid>\n  // </>\n\n  // );\n}\n"]},"metadata":{},"sourceType":"module"}