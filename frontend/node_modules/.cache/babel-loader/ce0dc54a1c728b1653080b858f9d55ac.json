{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lando\\\\Documents\\\\GitHub\\\\cop4331-helpinghand\\\\frontend\\\\src\\\\components\\\\forgotpassword\\\\forgot.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Appbar from \"../appbar/appbar.js\";\nimport { useHistory } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAreas } from '../../redux/actions.js';\n\nconst buildPath = require('../../redux/buildPath');\n\nconst useStyles = makeStyles(theme => ({\n  root: { ...theme.typography.button,\n    backgroundColor: theme.palette.background.paper\n  },\n  string: {\n    marginTop: '20px',\n    marginBottom: '20px',\n    fontSize: '20px'\n  },\n  welcome: {\n    margin: '15px',\n    marginBottom: '10px',\n    fontSize: '28px',\n    fontWeight: 'bold'\n  },\n  starter: {\n    fontSize: '18px',\n    marginBottom: '60px'\n  },\n  padding: {\n    marginTop: '20px',\n    marginBottom: '20px'\n  },\n  button: {\n    width: '200px',\n    height: '60px',\n    fontSize: '22px',\n    background: '#27AE60',\n    boxShadow: '0px 4px 4px rgba(154, 154, 154, 0.25)',\n    radius: '10px',\n    color: '#FFFFFF'\n  },\n  smallbutton: {\n    marginTop: '20px',\n    width: '120px',\n    height: '40px',\n    fontSize: '13px',\n    background: '#27AE60',\n    boxShadow: '0px 4px 4px rgba(154, 154, 154, 0.25)',\n    radius: '10px',\n    color: '#FFFFFF'\n  },\n  image: {\n    marginTop: '15px',\n    height: '200px'\n  },\n  link: {\n    alignItems: \"center\",\n    color: \"#27AE60\"\n  }\n}));\n\nfunction Forgot(props) {\n  const classes = useStyles();\n  let history = useHistory();\n  const location = useLocation();\n  const [email, setEmail] = useState('');\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    var obj = {\n      email: email\n    };\n    var js = JSON.stringify(obj);\n\n    try {\n      const response = await fetch(buildPath('/vol/forgot'), {\n        method: 'POST',\n        body: js,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      var res = JSON.parse(await response.text());\n\n      if (res.success == true) {\n        history.push('/');\n      }\n    } catch (e) {\n      alert(e.toString());\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Appbar, {\n    title: \"Forgot Password\",\n    type: \"Volunteer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.welcome,\n    variant: \"h4\",\n    component: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Forgot Password\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"filled-bare\",\n    placeholder: \"Email\",\n    margin: \"normal\",\n    variant: \"filled\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.smallbutton,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Submit\"))));\n}\n\nconst mapDispatchToProps = {\n  areaAction: setAreas\n};\nexport default connect(null, mapDispatchToProps)(Forgot);","map":{"version":3,"sources":["C:/Users/lando/Documents/GitHub/cop4331-helpinghand/frontend/src/components/forgotpassword/forgot.js"],"names":["React","useState","makeStyles","Grid","Appbar","useHistory","Typography","TextField","Button","useLocation","connect","setAreas","buildPath","require","useStyles","theme","root","typography","button","backgroundColor","palette","background","paper","string","marginTop","marginBottom","fontSize","welcome","margin","fontWeight","starter","padding","width","height","boxShadow","radius","color","smallbutton","image","link","alignItems","Forgot","props","classes","history","location","email","setEmail","handleSubmit","event","preventDefault","obj","js","JSON","stringify","response","fetch","method","body","headers","res","parse","text","success","push","e","alert","toString","target","value","mapDispatchToProps","areaAction"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Appbar from \"../appbar/appbar.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAreas } from '../../redux/actions.js';\r\n\r\nconst buildPath = require('../../redux/buildPath');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        ...theme.typography.button,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    string: {\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n        fontSize: '20px',\r\n    },\r\n    welcome: {\r\n        margin: '15px',\r\n        marginBottom: '10px',\r\n        fontSize: '28px',\r\n        fontWeight: 'bold',\r\n    },\r\n    starter: {\r\n        fontSize: '18px',\r\n        marginBottom: '60px',\r\n\r\n    },\r\n    padding: {\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n    },\r\n    button: {\r\n        width: '200px',\r\n        height: '60px',\r\n        fontSize: '22px',\r\n        background: '#27AE60',\r\n        boxShadow: '0px 4px 4px rgba(154, 154, 154, 0.25)',\r\n        radius: '10px',\r\n        color: '#FFFFFF'\r\n    },\r\n    smallbutton: { \r\n        marginTop:'20px',\r\n        width: '120px',\r\n        height: '40px',\r\n        fontSize: '13px',\r\n        background: '#27AE60',\r\n        boxShadow: '0px 4px 4px rgba(154, 154, 154, 0.25)',\r\n        radius: '10px',\r\n        color: '#FFFFFF'\r\n    },\r\n    image: {\r\n        marginTop: '15px',\r\n        height: '200px',\r\n    },\r\n    link: {\r\n        alignItems: \"center\",\r\n        color: \"#27AE60\",\r\n    }\r\n\r\n}));\r\n\r\nfunction Forgot(props)\r\n{\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [email, setEmail] = useState('');\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        var obj = {email: email};\r\n        var js = JSON.stringify(obj);\r\n\r\n        try{\r\n            const response = await fetch(buildPath('/vol/forgot'), {method: 'POST',\r\n                body: js, headers:{'Content-Type':'application/json'}});\r\n            \r\n                var res = JSON.parse(await response.text());\r\n            if (res.success == true)\r\n            {\r\n                history.push('/');\r\n            }\r\n        }\r\n        catch (e)\r\n        {\r\n            alert(e.toString());\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Appbar title=\"Forgot Password\" type=\"Volunteer\"/>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n            >\r\n            {/* <Grid item>\r\n            <img className={classes.image} src=\"/images/volunteer.png\"></img>\r\n            </Grid> */}\r\n            <Grid item>\r\n            <Typography className={classes.welcome} variant=\"h4\" component=\"h4\" align=\"center\">Forgot Password</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                required\r\n                id=\"filled-bare\"\r\n                placeholder={\"Email\"}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                onChange={(e)=> setEmail(e.target.value)}\r\n               />\r\n            </Grid>\r\n            <Grid item>\r\n            <Button \r\n                className={classes.smallbutton}\r\n                onClick={(handleSubmit)}>Submit\r\n            </Button>\r\n            </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = { areaAction: setAreas }\r\n\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Forgot)"]},"metadata":{},"sourceType":"module"}