{"ast":null,"code":"var _jsxFileName = \"/Users/lawrenceoconnor/Documents/GitHub/cop4331-helpinghand/frontend/src/components/login/volunteerLogin.js\";\nimport React, { useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport TaskCard from '../taskcard/taskcard.js';\nimport Appbar from \"../appbar/appbar.js\";\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport { useLocation } from \"react-router-dom\";\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { setAreas } from '../../redux/actions.js';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst buildPath = require('../../redux/buildPath');\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 40\n  },\n  image: {\n    marginTop: '5px',\n    height: '100px'\n  },\n  button: {\n    marginTop: '40px',\n    width: '110px',\n    height: '40px',\n    backgroundColor: \"#27AE60\",\n    color: '#FFFFFF'\n  },\n  buttonColor: {\n    backgroundColor: \"#27AE60\",\n    color: '#FFFFFF'\n  }\n}));\n\nfunction AccessCodePage(props) {\n  const classes = useStyles();\n  const location = useLocation();\n  let history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoginOpen, setIsLoginOpen] = useState(true);\n  const [isRegistrationOpen, setIsRegistrationOpen] = useState(false);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    var obj = {\n      email: email,\n      password: password\n    };\n    var js = JSON.stringify(obj);\n\n    try {\n      const response = await fetch(buildPath('/vol/login'), {\n        method: 'POST',\n        body: js,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      var res = JSON.parse(await response.text());\n\n      if (res.id < 0) {\n        setMessage(res.error);\n      } else {\n        var user = {\n          first_name: res.first_name,\n          last_name: res.last_name,\n          id: res.id\n        };\n        localStorage.setItem('user_data', JSON.stringify(user));\n        setMessage('');\n        history.push('/areas');\n      }\n    } catch (e) {\n      alert(e.toString());\n      return;\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Appbar, {\n    title: location.state.role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"root-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box-controller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controller \" + (this.state.isLoginOpen ? \"selected-controller\" : \"\"),\n    onClick: this.showLoginBox.bind(this),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controller \" + (this.state.isRegisterOpen ? \"selected-controller\" : \"\"),\n    onClick: this.showRegisterBox.bind(this),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Register\"))), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.root,\n    item: true,\n    xs: 12,\n    sm: 8,\n    md: 5,\n    component: Paper,\n    elevation: 6,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      my: 8,\n      mx: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.image,\n    src: \"/images/Logo.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  })), getpage())))));\n\n  function getpage() {\n    return /*#__PURE__*/React.createElement(Box, {\n      component: \"form\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      sx: {\n        mt: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      autoFocus: true,\n      onChange: event => setEmail(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      onChange: event => setPassword(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        value: \"remember\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 26\n        }\n      }),\n      label: \"Remember me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: classes.buttonColor,\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      sx: {\n        mt: 3,\n        mb: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"/forgot\",\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, \"Forgot password?\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"/createVolunteer\",\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }\n    }, \"Don't have an account? Sign Up\"))));\n  }\n}\n\nconst mapDispatchToProps = {\n  areaAction: setAreas\n};\nexport default connect(null, mapDispatchToProps)(AccessCodePage);","map":{"version":3,"sources":["/Users/lawrenceoconnor/Documents/GitHub/cop4331-helpinghand/frontend/src/components/login/volunteerLogin.js"],"names":["React","useState","Grid","TaskCard","Appbar","Typography","TextField","Button","CssBaseline","Paper","Box","Avatar","FormControlLabel","Checkbox","Link","useLocation","axios","connect","setAreas","useHistory","makeStyles","buildPath","require","useStyles","theme","root","marginTop","image","height","button","width","backgroundColor","color","buttonColor","AccessCodePage","props","classes","location","history","email","setEmail","message","setMessage","password","setPassword","isLoginOpen","setIsLoginOpen","isRegistrationOpen","setIsRegistrationOpen","handleSubmit","event","preventDefault","obj","js","JSON","stringify","response","fetch","method","body","headers","res","parse","text","id","error","user","first_name","last_name","localStorage","setItem","push","e","alert","toString","state","role","showLoginBox","bind","isRegisterOpen","showRegisterBox","my","mx","display","flexDirection","alignItems","getpage","mt","target","value","mb","mapDispatchToProps","areaAction"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Grid } from '@material-ui/core'\nimport TaskCard from '../taskcard/taskcard.js'\nimport Appbar from \"../appbar/appbar.js\";\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport { useLocation } from \"react-router-dom\";\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { setAreas } from '../../redux/actions.js';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst buildPath = require('../../redux/buildPath');\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 40,\n  },\n  image: {\n    marginTop: '5px',\n    height: '100px',\n},\n  button: {\n    marginTop: '40px',\n    width: '110px',\n    height: '40px',\n    backgroundColor: \"#27AE60\",\n    color: '#FFFFFF'\n  },\n  buttonColor: {\n    backgroundColor: \"#27AE60\",\n    color: '#FFFFFF'\n  },\n}));\n\nfunction AccessCodePage(props) {\n  const classes = useStyles();\n  const location = useLocation();\n  \n  let history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  \n  const [isLoginOpen, setIsLoginOpen] = useState(true);\n  const [isRegistrationOpen, setIsRegistrationOpen] = useState(false);\n\n\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    var obj = {email: email, password: password};\n    var js = JSON.stringify(obj);\n\n    try\n    {\n      const response = await fetch(buildPath('/vol/login'), {method: 'POST',\n        body: js, headers:{'Content-Type':'application/json'}});\n\n      var res = JSON.parse(await response.text());\n      if (res.id < 0)\n      {\n        setMessage(res.error);\n      }\n      else\n      {\n        var user = {first_name: res.first_name, last_name: res.last_name, id: res.id};\n        localStorage.setItem('user_data', JSON.stringify(user));\n\n        setMessage('');\n        history.push('/areas');\n      }\n    }\n    catch (e)\n    {\n      alert(e.toString());\n      return;\n    }\n  };\n  \n    return (\n      <>\n        <Appbar title={location.state.role} />\n        <form onSubmit={handleSubmit}>\n        <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >   \n\n<div className=\"root-container\">\n\n        <div className=\"box-controller\">\n          <div\n            className={\"controller \" + (this.state.isLoginOpen\n            ? \"selected-controller\"\n            : \"\")}\n            onClick={this\n            .showLoginBox\n            .bind(this)}>\n            Login\n          </div>\n          <div\n            className={\"controller \" + (this.state.isRegisterOpen\n            ? \"selected-controller\"\n            : \"\")}\n            onClick={this\n            .showRegisterBox\n            .bind(this)}>\n            Register\n          </div>\n        </div>\n        </div>\n\n\n        <Grid className={classes.root} item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Grid item>\n                <img className={classes.image} src=\"/images/Logo.png\"></img>\n            </Grid>\n            {/* <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              {/* <LockOutlinedIcon /> */}\n            {/* </Avatar> */}\n            \n            {/* <Typography component=\"h3\" variant=\"h5\">\n              Volunteer Sign In\n            </Typography> */}\n\n            {\n              getpage()\n            }\n            \n          </Box>\n        </Grid>\n\n          </Grid>\n        </form>\n      </>\n    \n      \n     \n\n    )\n\n    function getpage()\n{\n  return (\n    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                onChange = {(event) => setEmail(event.target.value)}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange = {(event) => setPassword(event.target.value)}\n              />\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              />\n              <Button\n               className={classes.buttonColor}\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign In\n              </Button>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"/forgot\" variant=\"body2\">\n                    Forgot password?\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"/createVolunteer\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n    \n  )\n}\n\n}\nconst mapDispatchToProps = { areaAction: setAreas }\n\n\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(AccessCodePage)\n"]},"metadata":{},"sourceType":"module"}