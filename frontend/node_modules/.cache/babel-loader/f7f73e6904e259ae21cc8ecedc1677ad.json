{"ast":null,"code":"var _jsxFileName = \"/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/createVolunteer/createVolunteer.js\";\nimport React, { useState, useRef, useEffect, forwardRef } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Appbar from \"../appbar/appbar.js\";\nimport useGoogleMapsApi from '../googleapi/useGoogleMapsApi.js';\nimport { useHistory } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\n\nconst buildPath = require('../../redux/buildPath');\n\nconst mapStyles = {\n  height: \"100vh\",\n  width: \"100%\"\n};\nconst defaultCenter = {\n  lat: 41.3851,\n  lng: 2.1734\n};\nconst useStyles = makeStyles(theme => ({\n  root: { ...theme.typography.button,\n    backgroundColor: theme.palette.background.paper\n  },\n  string: {\n    marginTop: '20px',\n    marginBottom: '20px',\n    fontSize: '20px'\n  },\n  welcome: {\n    margin: '15px',\n    marginBottom: '10px',\n    fontSize: '28px',\n    fontWeight: 'bold'\n  },\n  starter: {\n    fontSize: '18px',\n    marginBottom: '60px'\n  },\n  padding: {\n    marginTop: '20px',\n    marginBottom: '20px'\n  },\n  button: {\n    width: '200px',\n    height: '60px',\n    fontSize: '22px',\n    background: '#27AE60',\n    boxShadow: '0px 4px 4px rgba(154, 154, 154, 0.25)',\n    radius: '10px',\n    color: '#FFFFFF'\n  },\n  smallbutton: {\n    marginTop: '20px',\n    width: '120px',\n    height: '40px',\n    fontSize: '13px',\n    background: '#27AE60',\n    boxShadow: '0px 4px 4px rgba(154, 154, 154, 0.25)',\n    radius: '10px',\n    color: '#FFFFFF'\n  },\n  image: {\n    marginTop: '15px',\n    height: '200px'\n  },\n  link: {\n    alignItems: \"center\",\n    color: \"#27AE60\"\n  }\n}));\nconst CreateVolunteer = forwardRef((props, ref) => {\n  const inputRef = useRef();\n  const autocompleteRef = useRef();\n  const googleMapsApi = useGoogleMapsApi();\n  useEffect(() => {\n    if (googleMapsApi) {\n      autocompleteRef.current = new googleMapsApi.places.Autocomplete(inputRef.current, {\n        types: ['(cities)']\n      });\n      autocompleteRef.current.addListener('place_changed', () => {\n        const place = autocompleteRef.current.getPlace(); // Do something with the resolved place here (ie store in redux state)\n      });\n    }\n  }, [googleMapsApi]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Google Maps Location Lookup\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"location\",\n    \"aria-label\": \"Search locations\",\n    ref: inputRef,\n    placeholder: \"placeholder\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }));\n});\nexport default CreateVolunteer; // export default function CreateVolunteer() {\n//     const apiKey = 'AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4';\n//     const [firstName, setFirstName] = useState('');\n//     const [lastName, setLastName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password1, setPassword1] = useState('');\n//     const [password2, setPassword2] = useState('');\n//     const [longitude, setLongitude] = useState(0);\n//     const [latitude, setLatitude] = useState(0);\n//     const [distance, setDistance] = useState(0);\n//     const [message, setMessage] = useState('');\n//     const classes = useStyles();\n//     let history = useHistory();\n//     async function handleRegistration(event)\n//     {\n//         event.preventDefault();\n//         var obj = {email: email, password1: password1, password2: password2, first_name: firstName, \n//             last_name: lastName, longitude: longitude, latitude: latitude, accepted_distance: distance};\n//         var js = JSON.stringify(obj);\n//         try\n//         {\n//             const response = await fetch(buildPath('/vol/register'), {method: 'POST',\n//                 body: js, headers:{'Content-Type':'application/json'}});\n//             var res = JSON.parse(await response.text());\n//             if (res.id == -1)\n//             {\n//                 alert(JSON.stringify(res.error));\n//             }\n//             else\n//             {\n//                 var user = {first_name: res.first_name, last_name: res.last_name, id: res.id};\n//                 localStorage.setItem('user_data', JSON.stringify(user));\n//                 setMessage('');\n//                 history.push('/');\n//             }\n//         }\n//         catch(e)\n//         {\n//             alert(e.toString());\n//             return;\n//         }\n//     }\n//     return (\n//         <div>\n//             <Appbar title=\"Volunteer\" type=\"Volunteer\"/>\n//             <Grid\n//                 container\n//                 direction=\"column\"\n//                 justify=\"space-between\"\n//                 alignItems=\"center\"\n//             >\n//             {/* <Grid item>\n//             <img className={classes.image} src=\"/images/volunteer.png\"></img>\n//             </Grid> */}\n//             <Grid item>\n//             <Typography className={classes.welcome} variant=\"h4\" component=\"h4\" align=\"center\">Volunteer Registration</Typography>\n//             </Grid>\n//             <Grid item>\n//               <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"First Name\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setFirstName(e.target.value)}\n//                />\n//             </Grid>\n//             <Grid item>\n//               <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Last Name\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setLastName(e.target.value)}\n//                />\n//             </Grid>\n//             <Grid item>\n//               <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Email\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setEmail(e.target.value)}\n//                />\n//             </Grid>\n//             <Grid item>\n//               <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Password\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setPassword1(e.target.value)}\n//                />\n//             </Grid>\n//             <Grid item>\n//               <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Confirm Password\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setPassword2(e.target.value)}\n//                />\n//             </Grid>\n//             {/* <Grid item> */}\n//                 <LoadScript\n//                     googleMapsApiKey='AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4'>\n//                     <GoogleMap\n//                         mapContainerStyle={mapStyles}\n//                         zoom={13}\n//                         center={defaultCenter}\n//                     />\n//                 </LoadScript>\n//               {/* <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Longitude\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setLongitude(e.target.value)}\n//                /> */}\n//             </Grid>\n//             <Grid item>\n//               {/* <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Latitude\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setLatitude(e.target.value)}\n//                /> */}\n//             {/* </Grid> */}\n//             <Grid item>\n//               <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Minimum distance of task\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setDistance(e.target.value)}\n//                />   \n//             </Grid>\n//             <Grid item>\n//             <Button \n//                 className={classes.smallbutton}\n//                 onClick={handleRegistration}>Submit\n//             </Button>\n//             </Grid>\n//             </Grid>\n//         </div>\n//     )\n// }","map":{"version":3,"sources":["/Users/amandanisenbaum/cop4331-helpinghand-desk/frontend/src/components/createVolunteer/createVolunteer.js"],"names":["React","useState","useRef","useEffect","forwardRef","makeStyles","Grid","Appbar","useGoogleMapsApi","useHistory","Typography","TextField","Button","GoogleMap","LoadScript","buildPath","require","mapStyles","height","width","defaultCenter","lat","lng","useStyles","theme","root","typography","button","backgroundColor","palette","background","paper","string","marginTop","marginBottom","fontSize","welcome","margin","fontWeight","starter","padding","boxShadow","radius","color","smallbutton","image","link","alignItems","CreateVolunteer","props","ref","inputRef","autocompleteRef","googleMapsApi","current","places","Autocomplete","types","addListener","place","getPlace","handleSubmit","e","preventDefault"],"mappings":"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":["import React, {useState, useRef, useEffect, forwardRef } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Appbar from \"../appbar/appbar.js\";\nimport useGoogleMapsApi from '../googleapi/useGoogleMapsApi.js'\n\nimport { useHistory } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\n\nconst buildPath = require('../../redux/buildPath');\n\nconst mapStyles = {        \n    height: \"100vh\",\n    width: \"100%\"};\n  const defaultCenter = {\n    lat: 41.3851, lng: 2.1734\n  }\n  \nconst useStyles = makeStyles((theme) => ({\n    root: {\n        ...theme.typography.button,\n        backgroundColor: theme.palette.background.paper,\n    },\n    string: {\n        marginTop: '20px',\n        marginBottom: '20px',\n        fontSize: '20px',\n    },\n    welcome: {\n        margin: '15px',\n        marginBottom: '10px',\n        fontSize: '28px',\n        fontWeight: 'bold',\n    },\n    starter: {\n        fontSize: '18px',\n        marginBottom: '60px',\n\n    },\n    padding: {\n        marginTop: '20px',\n        marginBottom: '20px',\n    },\n    button: {\n        width: '200px',\n        height: '60px',\n        fontSize: '22px',\n        background: '#27AE60',\n        boxShadow: '0px 4px 4px rgba(154, 154, 154, 0.25)',\n        radius: '10px',\n        color: '#FFFFFF'\n    },\n    smallbutton: { \n        marginTop:'20px',\n        width: '120px',\n        height: '40px',\n        fontSize: '13px',\n        background: '#27AE60',\n        boxShadow: '0px 4px 4px rgba(154, 154, 154, 0.25)',\n        radius: '10px',\n        color: '#FFFFFF'\n    },\n    image: {\n        marginTop: '15px',\n        height: '200px',\n    },\n    link: {\n        alignItems: \"center\",\n        color: \"#27AE60\",\n    }\n\n}));\n\n const CreateVolunteer = forwardRef((props, ref) => {\n    const inputRef = useRef()\n    const autocompleteRef = useRef()\n    const googleMapsApi = useGoogleMapsApi()\n  \n    useEffect(() => {\n      if (googleMapsApi) {\n        autocompleteRef.current = new googleMapsApi.places.Autocomplete(inputRef.current, { types: ['(cities)'] })\n        autocompleteRef.current.addListener('place_changed', () => {\n          const place = autocompleteRef.current.getPlace()\n          // Do something with the resolved place here (ie store in redux state)\n        })\n      }\n    }, [googleMapsApi])\n  \n    const handleSubmit = (e) => {\n      e.preventDefault()\n      return false\n    }\n  \n    return (\n      <form autoComplete='off' onSubmit={handleSubmit}>\n        <label htmlFor='location'>Google Maps Location Lookup</label>\n        <input\n          name='location'\n          aria-label='Search locations'\n          ref={inputRef}\n          placeholder='placeholder'\n          autoComplete='off'\n        />\n      </form>\n    )\n  });\n\n  export default CreateVolunteer\n\n// export default function CreateVolunteer() {\n//     const apiKey = 'AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4';\n\n//     const [firstName, setFirstName] = useState('');\n//     const [lastName, setLastName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password1, setPassword1] = useState('');\n//     const [password2, setPassword2] = useState('');\n//     const [longitude, setLongitude] = useState(0);\n//     const [latitude, setLatitude] = useState(0);\n//     const [distance, setDistance] = useState(0);\n//     const [message, setMessage] = useState('');\n\n//     const classes = useStyles();\n//     let history = useHistory();\n\n//     async function handleRegistration(event)\n//     {\n//         event.preventDefault();\n//         var obj = {email: email, password1: password1, password2: password2, first_name: firstName, \n//             last_name: lastName, longitude: longitude, latitude: latitude, accepted_distance: distance};\n\n//         var js = JSON.stringify(obj);\n\n//         try\n//         {\n//             const response = await fetch(buildPath('/vol/register'), {method: 'POST',\n//                 body: js, headers:{'Content-Type':'application/json'}});\n\n//             var res = JSON.parse(await response.text());\n\n//             if (res.id == -1)\n//             {\n//                 alert(JSON.stringify(res.error));\n//             }\n//             else\n//             {\n//                 var user = {first_name: res.first_name, last_name: res.last_name, id: res.id};\n//                 localStorage.setItem('user_data', JSON.stringify(user));\n\n//                 setMessage('');\n//                 history.push('/');\n//             }\n//         }\n//         catch(e)\n//         {\n//             alert(e.toString());\n//             return;\n//         }\n//     }\n//     return (\n//         <div>\n//             <Appbar title=\"Volunteer\" type=\"Volunteer\"/>\n//             <Grid\n//                 container\n//                 direction=\"column\"\n//                 justify=\"space-between\"\n//                 alignItems=\"center\"\n//             >\n//             {/* <Grid item>\n//             <img className={classes.image} src=\"/images/volunteer.png\"></img>\n//             </Grid> */}\n//             <Grid item>\n//             <Typography className={classes.welcome} variant=\"h4\" component=\"h4\" align=\"center\">Volunteer Registration</Typography>\n//             </Grid>\n//             <Grid item>\n//               <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"First Name\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setFirstName(e.target.value)}\n//                />\n//             </Grid>\n//             <Grid item>\n//               <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Last Name\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setLastName(e.target.value)}\n//                />\n//             </Grid>\n//             <Grid item>\n//               <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Email\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setEmail(e.target.value)}\n//                />\n//             </Grid>\n//             <Grid item>\n//               <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Password\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setPassword1(e.target.value)}\n//                />\n//             </Grid>\n//             <Grid item>\n//               <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Confirm Password\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setPassword2(e.target.value)}\n//                />\n//             </Grid>\n//             {/* <Grid item> */}\n//                 <LoadScript\n//                     googleMapsApiKey='AIzaSyCVF0U1KIXIVF3WkEhJ84Ps3EnlKt4NtO4'>\n//                     <GoogleMap\n//                         mapContainerStyle={mapStyles}\n//                         zoom={13}\n//                         center={defaultCenter}\n//                     />\n//                 </LoadScript>\n//               {/* <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Longitude\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setLongitude(e.target.value)}\n//                /> */}\n//             </Grid>\n//             <Grid item>\n//               {/* <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Latitude\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setLatitude(e.target.value)}\n//                /> */}\n//             {/* </Grid> */}\n//             <Grid item>\n//               <TextField\n//                 required\n//                 id=\"filled-bare\"\n//                 placeholder={\"Minimum distance of task\"}\n//                 margin=\"normal\"\n//                 variant=\"filled\"\n//                 onChange={(e)=> setDistance(e.target.value)}\n//                />   \n//             </Grid>\n//             <Grid item>\n//             <Button \n//                 className={classes.smallbutton}\n//                 onClick={handleRegistration}>Submit\n//             </Button>\n//             </Grid>\n//             </Grid>\n//         </div>\n//     )\n\n// }\n"]},"metadata":{},"sourceType":"module"}